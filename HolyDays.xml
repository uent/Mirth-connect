<channelGroup version="3.5.1">
  <id>efe99756-42d4-4c89-9291-e70cc33fdaf2</id>
  <name>HolyDays</name>
  <revision>2</revision>
  <lastModified>
    <time>1523538857461</time>
    <timezone>America/Santiago</timezone>
  </lastModified>
  <description></description>
  <channels>
    <channel version="3.5.1">
      <id>74fed4cb-0aa0-4289-9cbf-529bf8977107</id>
      <nextMetaDataId>7</nextMetaDataId>
      <name>HolyDays Api Service</name>
      <description></description>
      <revision>107</revision>
      <sourceConnector version="3.5.1">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.http.HttpReceiverProperties" version="3.5.1">
          <pluginProperties>
            <com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties version="3.5.1">
  <authType>NONE</authType>
            </com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties>
          </pluginProperties>
          <listenerConnectorProperties version="3.5.1">
            <host>0.0.0.0</host>
            <port>10002</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.5.1">
            <responseVariable>d1</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <xmlBody>true</xmlBody>
          <parseMultipart>true</parseMultipart>
          <includeMetadata>false</includeMetadata>
          <binaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</binaryMimeTypes>
          <binaryMimeTypesRegex>true</binaryMimeTypesRegex>
          <responseContentType>application/json</responseContentType>
          <responseDataTypeBinary>false</responseDataTypeBinary>
          <responseStatusCode></responseStatusCode>
          <responseHeaders class="linked-hash-map"/>
          <charset>UTF-8</charset>
          <contextPath></contextPath>
          <timeout>0</timeout>
          <staticResources/>
        </properties>
        <transformer version="3.5.1">
          <elements>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>Url HolyDays Service</name>
              <sequenceNumber>0</sequenceNumber>
              <variable>Url HolyDays Service</variable>
              <mapping>&quot;http://www.holidaywebservice.com/HolidayService_v2/HolidayService2.asmx?WSDL&quot;</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>EndPoint</name>
              <sequenceNumber>1</sequenceNumber>
              <variable>EndPoint</variable>
              <mapping>sourceMap.get(&apos;contextPath&apos;)</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>Http Method</name>
              <sequenceNumber>2</sequenceNumber>
              <variable>Http Method</variable>
              <mapping>sourceMap.get(&apos;method&apos;).toLowerCase()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
          </elements>
          <inboundTemplate encoding="base64">e30=</inboundTemplate>
          <outboundTemplate encoding="base64">e30=</outboundTemplate>
          <inboundDataType>XML</inboundDataType>
          <outboundDataType>JSON</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
              <stripNamespaces>true</stripNamespaces>
            </serializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
              <splitType>Element_Name</splitType>
              <elementName></elementName>
              <level>1</level>
              <query></query>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
            <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
              <splitType>JavaScript</splitType>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.5.1">
          <elements/>
        </filter>
        <transportName>HTTP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.5.1">
          <metaDataId>3</metaDataId>
          <name>EndPoint Parse</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>parseEndPoint = $(&apos;EndPoint&apos;).split(&quot;/api/&quot;)[1];

parseEndPoint = parseEndPoint.split(&quot;/&quot;);

channelMap.put(&apos;uriFragment1&apos;, validate(parseEndPoint[0], &apos;&apos;, new Array()));

channelMap.put(&apos;uriFragment2&apos;, validate(parseEndPoint[1], &apos;&apos;, new Array()));

channelMap.put(&apos;uriFragment3&apos;, validate(parseEndPoint[2], &apos;&apos;, new Array()));

channelMap.put(&apos;uriFragment4&apos;, validate(parseEndPoint[3], &apos;&apos;, new Array()));</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>2</metaDataId>
          <name>Soap Operation Selector</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>switch (String($(&apos;uriFragment1&apos;)))
{
	case &apos;countries&apos;://	api/countries
		switch (String($(&apos;uriFragment2&apos;)))
		{
			case &apos;&apos;://	api/countries/
				switch (String($(&apos;Http Method&apos;)))
				{
					case &apos;get&apos;:// Get api/countries
						channelMap.put(&apos;singularResourceName&apos;, validate(&apos;Country&apos;, &apos;&apos;, new Array()));
						channelMap.put(&apos;pluralResourceName&apos;, validate(&apos;Countries&apos;, &apos;&apos;, new Array()));
						channelMap.put(&apos;Soap Payload&apos;, validate(getXmlPayload(1), &apos;&apos;, new Array()));
						break;
				}
				break;
			default:// api/countries/{countryName}
				switch (String($(&apos;uriFragment3&apos;))) {
					case &apos;&apos;:// api/countries/{countryName}/
						break;
					case &apos;holidays&apos;: //	api/countries/{countryName}/holiday
						switch (String($(&apos;uriFragment4&apos;)))
						{
							case &apos;&apos;:
								switch (String($(&apos;Http Method&apos;)))
								{
									case &apos;get&apos;://	api/countries/{countryName}/holiday/
										channelMap.put(&apos;singularResourceName&apos;, validate(&apos;Holiday&apos;, &apos;&apos;, new Array()));
										channelMap.put(&apos;pluralResourceName&apos;, validate(&apos;Holidays&apos;, &apos;&apos;, new Array()));
										payloadData = {&apos;countryName&apos;: $(&apos;uriFragment2&apos;).toString()};
										channelMap.put(&apos;Soap Payload&apos;, validate(getXmlPayload(2, payloadData), &apos;&apos;, new Array()));	
										break;
								}
								break;
							default:
								switch (String($(&apos;Http Method&apos;)))
								{
									case &apos;get&apos;://	api/countries/{countryName}/holiday/{holidayName}	
										channelMap.put(&apos;singularResourceName&apos;, validate(&apos;Holiday&apos;, &apos;&apos;, new Array()));
										channelMap.put(&apos;pluralResourceName&apos;, validate(&apos;Holidays&apos;, &apos;&apos;, new Array()));
										payloadData = {&apos;countryName&apos;: $(&apos;uriFragment2&apos;).toString(),
													&apos;holidayName&apos;: $(&apos;uriFragment4&apos;).toString()};
													
										channelMap.put(&apos;payload&apos;, validate(payloadData, &apos;&apos;, new Array()));
										channelMap.put(&apos;Soap Payload&apos;, validate(getXmlPayload(3, payloadData), &apos;&apos;, new Array()));	
										break;
								}
								break;
					}			
					break;
				}
				break;
		}
		break;
}</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>1</metaDataId>
          <name>Soap Sender (HolyDays Service)</name>
          <properties class="com.mirth.connect.connectors.ws.WebServiceDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <wsdlUrl>http://www.holidaywebservice.com/HolidayService_v2/HolidayService2.asmx?WSDL</wsdlUrl>
            <service>{http://www.holidaywebservice.com/HolidayService_v2/}HolidayService2</service>
            <port>{http://www.holidaywebservice.com/HolidayService_v2/}HolidayService2Soap12</port>
            <operation>GetCountriesAvailable</operation>
            <locationURI>http://www.holidaywebservice.com/HolidayService_v2/HolidayService2.asmx</locationURI>
            <socketTimeout>30000</socketTimeout>
            <useAuthentication>false</useAuthentication>
            <username></username>
            <password></password>
            <envelope>${maps.get(&apos;Soap Payload&apos;)}</envelope>
            <oneWay>false</oneWay>
            <headers/>
            <useMtom>false</useMtom>
            <attachmentNames/>
            <attachmentContents/>
            <attachmentTypes/>
            <soapAction>http://www.holidaywebservice.com/HolidayService_v2/HolidayService2.asmx</soapAction>
            <wsdlDefinitionMap>
              <map class="linked-hash-map">
                <entry>
                  <string>{http://www.holidaywebservice.com/HolidayService_v2/}HolidayService2</string>
                  <com.mirth.connect.connectors.ws.DefinitionServiceMap_-DefinitionPortMap>
                    <map class="linked-hash-map">
                      <entry>
                        <string>{http://www.holidaywebservice.com/HolidayService_v2/}HolidayService2Soap12</string>
                        <com.mirth.connect.connectors.ws.DefinitionServiceMap_-PortInformation>
                          <operations>
                            <string>GetCountriesAvailable</string>
                            <string>GetHolidayDate</string>
                            <string>GetHolidaysAvailable</string>
                            <string>GetHolidaysForDateRange</string>
                            <string>GetHolidaysForMonth</string>
                            <string>GetHolidaysForYear</string>
                          </operations>
                          <locationURI>http://www.holidaywebservice.com/HolidayService_v2/HolidayService2.asmx</locationURI>
                        </com.mirth.connect.connectors.ws.DefinitionServiceMap_-PortInformation>
                      </entry>
                      <entry>
                        <string>{http://www.holidaywebservice.com/HolidayService_v2/}HolidayService2Soap</string>
                        <com.mirth.connect.connectors.ws.DefinitionServiceMap_-PortInformation>
                          <operations>
                            <string>GetCountriesAvailable</string>
                            <string>GetHolidayDate</string>
                            <string>GetHolidaysAvailable</string>
                            <string>GetHolidaysForDateRange</string>
                            <string>GetHolidaysForMonth</string>
                            <string>GetHolidaysForYear</string>
                          </operations>
                          <locationURI>http://www.holidaywebservice.com/HolidayService_v2/HolidayService2.asmx</locationURI>
                        </com.mirth.connect.connectors.ws.DefinitionServiceMap_-PortInformation>
                      </entry>
                    </map>
                  </com.mirth.connect.connectors.ws.DefinitionServiceMap_-DefinitionPortMap>
                </entry>
              </map>
            </wsdlDefinitionMap>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
                <name>Xml to Json Resource</name>
                <sequenceNumber>0</sequenceNumber>
                <script>//static values
	tmp[&apos;status&apos;] = &quot;success&quot;;
	tmp[&apos;code&apos;] = 200;
	tmp[&apos;message&apos;] = &quot;Ok&quot;;
//

//dynamic values
	tmp[&apos;resource&apos;] = $(&apos;singularResourceName&apos;);
	
	tmp[&apos;total&apos;] = msg.*::[&apos;Body&apos;].*::[&apos;Get&apos; + $(&apos;pluralResourceName&apos;) + &apos;AvailableResponse&apos;].*::[&apos;Get&apos; + $(&apos;pluralResourceName&apos;) + &apos;AvailableResult&apos;].*::[$(&apos;singularResourceName&apos;) + &apos;Code&apos;].length();

	//collection
	if (tmp[&apos;total&apos;] &gt; 1)
	{
		tmp[&apos;data&apos;] = [];
	
		for (var i = 0; i &lt; msg.*::[&apos;Body&apos;].*::[&apos;Get&apos; + $(&apos;pluralResourceName&apos;) + &apos;AvailableResponse&apos;].*::[&apos;Get&apos; + $(&apos;pluralResourceName&apos;) +&apos;AvailableResult&apos;].*::[$(&apos;singularResourceName&apos;) + &apos;Code&apos;].length(); i++)
		{	
			tmp[&apos;data&apos;][i] = {};
			tmp[&apos;data&apos;][i][&apos;code&apos;] = 		msg.*::[&apos;Body&apos;].*::[&apos;Get&apos; + $(&apos;pluralResourceName&apos;) + &apos;AvailableResponse&apos;].*::[&apos;Get&apos; + $(&apos;pluralResourceName&apos;) + &apos;AvailableResult&apos;].*::[$(&apos;singularResourceName&apos;) + &apos;Code&apos;][i].*::[&apos;Code&apos;].toString();
			tmp[&apos;data&apos;][i][&apos;description&apos;] = 	msg.*::[&apos;Body&apos;].*::[&apos;Get&apos; + $(&apos;pluralResourceName&apos;) + &apos;AvailableResponse&apos;].*::[&apos;Get&apos; + $(&apos;pluralResourceName&apos;) + &apos;AvailableResult&apos;].*::[$(&apos;singularResourceName&apos;) + &apos;Code&apos;][i].*::[&apos;Description&apos;].toString();
		}
	} 
	else 
	{
		tmp[&apos;data&apos;] = {};

		tmp[&apos;data&apos;][&apos;code&apos;] = String($(&apos;uriFragment4&apos;));
		tmp[&apos;data&apos;][&apos;date&apos;] = msg.*::[&apos;Body&apos;].*::[&apos;GetHolidayDateResponse&apos;].*::[&apos;GetHolidayDateResult&apos;].toString();
	}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64">e30=</outboundTemplate>
            <inboundDataType>XML</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
                <stripNamespaces>false</stripNamespaces>
              </serializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
                <splitType>Element_Name</splitType>
                <elementName></elementName>
                <level>1</level>
                <query></query>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>Web Service Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.5.1">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.5.1">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <exportData>
        <metadata>
          <enabled>true</enabled>
          <lastModified>
            <time>1523646204787</time>
            <timezone>America/Santiago</timezone>
          </lastModified>
          <pruningSettings>
            <archiveEnabled>true</archiveEnabled>
          </pruningSettings>
        </metadata>
        <codeTemplateLibraries>
          <codeTemplateLibrary version="3.5.1">
            <id>f8595aeb-709f-4e03-90ab-97c02f81982e</id>
            <name>Xml Payloads</name>
            <revision>1</revision>
            <lastModified>
              <time>1523557583865</time>
              <timezone>America/Santiago</timezone>
            </lastModified>
            <description></description>
            <includeNewChannels>false</includeNewChannels>
            <enabledChannelIds>
              <string>74fed4cb-0aa0-4289-9cbf-529bf8977107</string>
            </enabledChannelIds>
            <disabledChannelIds>
              <string>bcd252d7-2eac-41f8-9220-4d52ef361d13</string>
              <string>4588f2cb-5cd1-403a-81b2-f721ece6502c</string>
            </disabledChannelIds>
            <codeTemplates>
              <codeTemplate version="3.5.1">
                <id>a452223d-2387-4ab8-b511-2865b3b7adda</id>
                <name>get Xml Payload HolyDays Soap Service</name>
                <revision>5</revision>
                <lastModified>
                  <time>1523636195531</time>
                  <timezone>America/Santiago</timezone>
                </lastModified>
                <contextSet>
                  <delegate>
                    <contextType>CHANNEL_ATTACHMENT</contextType>
                    <contextType>CHANNEL_UNDEPLOY</contextType>
                    <contextType>CHANNEL_PREPROCESSOR</contextType>
                    <contextType>DESTINATION_DISPATCHER</contextType>
                    <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                    <contextType>CHANNEL_BATCH</contextType>
                    <contextType>SOURCE_RECEIVER</contextType>
                    <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                    <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                    <contextType>CHANNEL_DEPLOY</contextType>
                    <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  </delegate>
                </contextSet>
                <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
                  <type>FUNCTION</type>
                  <code>/**
	Modify the description here. Modify the function name and parameters as needed. One function per
	template is recommended; create a new code template for each new function.

	@param {Any} index - 
	@return {String} return description
*/
function getXmlPayload (index, payloadData) 
{
	switch (index)
	{
		case 1:	//Get /api/Countries/
			return &quot;&lt;?xml version=&apos;1.0&apos; encoding=&apos;utf-8&apos;?&gt;&quot;
				+ &quot;&lt;soap12:Envelope xmlns:xsi=&apos;http://www.w3.org/2001/XMLSchema-instance&apos; xmlns:xsd=&apos;http://www.w3.org/2001/XMLSchema&apos; xmlns:soap12=&apos;http://www.w3.org/2003/05/soap-envelope&apos;&gt;&quot;
  				+ &quot;&lt;soap12:Body&gt;&quot;
    				+ &quot;&lt;GetCountriesAvailable xmlns=&apos;http://www.holidaywebservice.com/HolidayService_v2/&apos; /&gt;&quot;
  				+ &quot;&lt;/soap12:Body&gt;&quot;
				+ &quot;&lt;/soap12:Envelope&gt;&quot;;
			break;
		case 2:	///Get api/Countries/{CountryName}/holidays/
			return &quot;&lt;?xml version=&apos;1.0&apos; encoding=&apos;utf-8&apos;?&gt;&quot;
					+ &quot;&lt;soap12:Envelope xmlns:xsi=&apos;http://www.w3.org/2001/XMLSchema-instance&apos; xmlns:xsd=&apos;http://www.w3.org/2001/XMLSchema&apos; xmlns:soap12=&apos;http://www.w3.org/2003/05/soap-envelope&apos;&gt;&quot;
  						+ &quot;&lt;soap12:Body&gt;&quot;
    							+ &quot;&lt;GetHolidaysAvailable xmlns=&apos;http://www.holidaywebservice.com/HolidayService_v2/&apos;&gt;&quot;
      							+ &quot;&lt;countryCode&gt;&quot; + payloadData.countryName + &quot;&lt;/countryCode&gt;&quot;
    							+ &quot;&lt;/GetHolidaysAvailable&gt;&quot;
  						+ &quot;&lt;/soap12:Body&gt;&quot;
					+ &quot;&lt;/soap12:Envelope&gt;&quot;;
			break;
		case 3:	///Get api/Countries/{CountryName}/holidays/{holydayName}
			return &quot;&lt;?xml version=&apos;1.0&apos; encoding=&apos;utf-8&apos;?&gt;&quot;
				+ &quot;&lt;soap12:Envelope xmlns:xsi=&apos;http://www.w3.org/2001/XMLSchema-instance&apos; xmlns:xsd=&apos;http://www.w3.org/2001/XMLSchema&apos; xmlns:soap12=&apos;http://www.w3.org/2003/05/soap-envelope&apos;&gt;&quot;
  					+ &quot;&lt;soap12:Body&gt;&quot;
    						+ &quot;&lt;GetHolidayDate xmlns=&apos;http://www.holidaywebservice.com/HolidayService_v2/&apos;&gt;&quot;
      						+ &quot;&lt;countryCode&gt;&quot; + payloadData.countryName + &quot;&lt;/countryCode&gt;&quot;
    							+ &quot;&lt;holidayCode&gt;&quot;+ payloadData.holidayName + &quot;&lt;/holidayCode&gt;&quot;
     						+ &quot;&lt;year&gt;&quot; + (new Date()).getFullYear() + &quot;&lt;/year&gt;&quot;
  						+ &quot;&lt;/GetHolidayDate&gt;&quot;
  					+ &quot;&lt;/soap12:Body&gt;&quot;
				+ &quot;&lt;/soap12:Envelope&gt;&quot;		
		default:
			return &quot;&quot;;
	}
			
}</code>
                </properties>
              </codeTemplate>
            </codeTemplates>
          </codeTemplateLibrary>
        </codeTemplateLibraries>
      </exportData>
    </channel>
  </channels>
</channelGroup>