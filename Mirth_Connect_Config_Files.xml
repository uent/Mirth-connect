<channelGroup version="3.5.1">
  <id>Default Group</id>
  <name>[Default Group]</name>
  <description>Channels not part of a group will appear here.</description>
  <channels>
    <channel version="3.5.1">
      <id>bcd252d7-2eac-41f8-9220-4d52ef361d13</id>
      <nextMetaDataId>22</nextMetaDataId>
      <name>Nucleus</name>
      <description></description>
      <revision>424</revision>
      <sourceConnector version="3.5.1">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.http.HttpReceiverProperties" version="3.5.1">
          <pluginProperties>
            <com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties version="3.5.1">
  <authType>NONE</authType>
            </com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties>
          </pluginProperties>
          <listenerConnectorProperties version="3.5.1">
            <host>0.0.0.0</host>
            <port>10000</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.5.1">
            <responseVariable>d18</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <xmlBody>true</xmlBody>
          <parseMultipart>true</parseMultipart>
          <includeMetadata>true</includeMetadata>
          <binaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</binaryMimeTypes>
          <binaryMimeTypesRegex>true</binaryMimeTypesRegex>
          <responseContentType>application/json</responseContentType>
          <responseDataTypeBinary>false</responseDataTypeBinary>
          <responseStatusCode>200</responseStatusCode>
          <responseHeaders class="linked-hash-map"/>
          <charset>DEFAULT_ENCODING</charset>
          <contextPath></contextPath>
          <timeout>0</timeout>
          <staticResources/>
        </properties>
        <transformer version="3.5.1">
          <elements>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>Url</name>
              <sequenceNumber>0</sequenceNumber>
              <variable>Url</variable>
              <mapping>sourceMap.get(&apos;contextPath&apos;)</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>GLOBAL_CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>Http Method</name>
              <sequenceNumber>1</sequenceNumber>
              <variable>Http Method</variable>
              <mapping>sourceMap.get(&apos;method&apos;).toLowerCase()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.messagebuilder.MessageBuilderStep>
              <sequenceNumber>2</sequenceNumber>
              <messageSegment>tmp</messageSegment>
              <mapping>parseXmlParametersToObject(msg[&apos;Parameters&apos;].toString())</mapping>
              <defaultValue></defaultValue>
              <replacements/>
            </com.mirth.connect.plugins.messagebuilder.MessageBuilderStep>
          </elements>
          <inboundTemplate encoding="base64">PEh0dHBSZXF1ZXN0Pg0KICAgIDxSZW1vdGVBZGRyZXNzPjA6MDowOjA6MDowOjA6MTwvUmVtb3Rl
QWRkcmVzcz4NCiAgICA8UmVxdWVzdFVybD5odHRwOi8vbG9jYWxob3N0OjEwMDAwL2FwaS91c2Vy
czwvUmVxdWVzdFVybD4NCiAgICA8TWV0aG9kPlBPU1Q8L01ldGhvZD4NCiAgICA8UmVxdWVzdFBh
dGgvPg0KICAgIDxSZXF1ZXN0Q29udGV4dFBhdGg+L2FwaS91c2VyczwvUmVxdWVzdENvbnRleHRQ
YXRoPg0KICAgIDxQYXJhbWV0ZXJzPg0KICAgICAgICA8bmFtZT5wZXBlPC9uYW1lPg0KICAgICAg
ICA8bGFzdF9uYW1lPnRvcnJlczwvbGFzdF9uYW1lPg0KICAgICAgICA8ZW1haWw+cWRxZEBnbWFp
bC5jb208L2VtYWlsPg0KICAgICAgICA8c3RhdHVzPjE8L3N0YXR1cz4NCiAgICA8L1BhcmFtZXRl
cnM+DQogICAgPEhlYWRlcj4NCiAgICAgICAgPENhY2hlLUNvbnRyb2w+bm8tY2FjaGU8L0NhY2hl
LUNvbnRyb2w+DQogICAgICAgIDxBY2NlcHQ+Ki8qPC9BY2NlcHQ+DQogICAgICAgIDxVc2VyLUFn
ZW50PlBvc3RtYW5SdW50aW1lLzcuMS4xPC9Vc2VyLUFnZW50Pg0KICAgICAgICA8Q29ubmVjdGlv
bj5rZWVwLWFsaXZlPC9Db25uZWN0aW9uPg0KICAgICAgICA8UG9zdG1hbi1Ub2tlbj5lNWM3OTkz
Ny01MjY0LTQyMGUtYjRhZi00Y2RmNzdlMTY0NjU8L1Bvc3RtYW4tVG9rZW4+DQogICAgICAgIDxI
b3N0PmxvY2FsaG9zdDoxMDAwMDwvSG9zdD4NCiAgICAgICAgPEFjY2VwdC1FbmNvZGluZz5nemlw
LCBkZWZsYXRlPC9BY2NlcHQtRW5jb2Rpbmc+DQogICAgICAgIDxDb250ZW50LUxlbmd0aD41ODwv
Q29udGVudC1MZW5ndGg+DQogICAgICAgIDxDb250ZW50LVR5cGU+YXBwbGljYXRpb24veC13d3ct
Zm9ybS11cmxlbmNvZGVkPC9Db250ZW50LVR5cGU+DQogICAgPC9IZWFkZXI+DQogICAgPENvbnRl
bnQgZW5jb2Rpbmc9IkJhc2U2NCIgbXVsdGlwYXJ0PSJubyIvPg0KPC9IdHRwUmVxdWVzdD4NCg==
</inboundTemplate>
          <outboundTemplate encoding="base64">e30=</outboundTemplate>
          <inboundDataType>XML</inboundDataType>
          <outboundDataType>JSON</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
              <stripNamespaces>true</stripNamespaces>
            </serializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
              <splitType>Element_Name</splitType>
              <elementName></elementName>
              <level>1</level>
              <query></query>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
            <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
              <splitType>JavaScript</splitType>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.5.1">
          <elements/>
        </filter>
        <transportName>HTTP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.5.1">
          <metaDataId>10</metaDataId>
          <name>Http Get</name>
          <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <host>http://54.210.72.106:81${Url}</host>
            <useProxyServer>false</useProxyServer>
            <proxyAddress></proxyAddress>
            <proxyPort></proxyPort>
            <method>get</method>
            <headers class="linked-hash-map"/>
            <parameters class="linked-hash-map"/>
            <responseXmlBody>true</responseXmlBody>
            <responseParseMultipart>true</responseParseMultipart>
            <responseIncludeMetadata>false</responseIncludeMetadata>
            <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
            <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
            <multipart>false</multipart>
            <useAuthentication>false</useAuthentication>
            <authenticationType>Basic</authenticationType>
            <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
            <username></username>
            <password></password>
            <content></content>
            <contentType>text/plain</contentType>
            <dataTypeBinary>false</dataTypeBinary>
            <charset>UTF-8</charset>
            <socketTimeout>30000</socketTimeout>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
                <name>Accept message if &quot;$(&apos;Http Method&apos;)&quot; equals &quot;get&quot;</name>
                <sequenceNumber>0</sequenceNumber>
                <field>$(&apos;Http Method&apos;)</field>
                <condition>EQUALS</condition>
                <values>
                  <string>&quot;get&quot;</string>
                </values>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>HTTP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>11</metaDataId>
          <name>Http Post</name>
          <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <host>http://54.210.72.106:81${Url}</host>
            <useProxyServer>false</useProxyServer>
            <proxyAddress></proxyAddress>
            <proxyPort></proxyPort>
            <method>post</method>
            <headers class="linked-hash-map"/>
            <parameters class="linked-hash-map"/>
            <responseXmlBody>false</responseXmlBody>
            <responseParseMultipart>true</responseParseMultipart>
            <responseIncludeMetadata>false</responseIncludeMetadata>
            <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
            <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
            <multipart>false</multipart>
            <useAuthentication>false</useAuthentication>
            <authenticationType>Basic</authenticationType>
            <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
            <username></username>
            <password></password>
            <content>${message.encodedData}</content>
            <contentType>application/json</contentType>
            <dataTypeBinary>false</dataTypeBinary>
            <charset>UTF-8</charset>
            <socketTimeout>30000</socketTimeout>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
                <name>Accept message if &quot;$(&apos;Http Method&apos;)&quot; equals &quot;post&quot;</name>
                <sequenceNumber>0</sequenceNumber>
                <field>$(&apos;Http Method&apos;)</field>
                <condition>EQUALS</condition>
                <values>
                  <string>&quot;post&quot;</string>
                </values>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>HTTP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>20</metaDataId>
          <name>Http Delete</name>
          <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <host>http://54.210.72.106:81${Url}</host>
            <useProxyServer>false</useProxyServer>
            <proxyAddress></proxyAddress>
            <proxyPort></proxyPort>
            <method>delete</method>
            <headers class="linked-hash-map"/>
            <parameters class="linked-hash-map"/>
            <responseXmlBody>false</responseXmlBody>
            <responseParseMultipart>true</responseParseMultipart>
            <responseIncludeMetadata>false</responseIncludeMetadata>
            <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
            <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
            <multipart>false</multipart>
            <useAuthentication>false</useAuthentication>
            <authenticationType>Basic</authenticationType>
            <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
            <username></username>
            <password></password>
            <content></content>
            <contentType>text/plain</contentType>
            <dataTypeBinary>false</dataTypeBinary>
            <charset>UTF-8</charset>
            <socketTimeout>30000</socketTimeout>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
                <name>Accept message if &quot;$(&apos;Http Method&apos;)&quot; equals &quot;delete&quot;</name>
                <sequenceNumber>0</sequenceNumber>
                <field>$(&apos;Http Method&apos;)</field>
                <condition>EQUALS</condition>
                <values>
                  <string>&quot;delete&quot;</string>
                </values>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>HTTP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>21</metaDataId>
          <name>Http Put</name>
          <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <host>http://54.210.72.106:81${Url}</host>
            <useProxyServer>false</useProxyServer>
            <proxyAddress></proxyAddress>
            <proxyPort></proxyPort>
            <method>put</method>
            <headers class="linked-hash-map"/>
            <parameters class="linked-hash-map"/>
            <responseXmlBody>false</responseXmlBody>
            <responseParseMultipart>true</responseParseMultipart>
            <responseIncludeMetadata>false</responseIncludeMetadata>
            <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
            <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
            <multipart>false</multipart>
            <useAuthentication>false</useAuthentication>
            <authenticationType>Basic</authenticationType>
            <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
            <username></username>
            <password></password>
            <content>${message.encodedData}</content>
            <contentType>application/json</contentType>
            <dataTypeBinary>false</dataTypeBinary>
            <charset>UTF-8</charset>
            <socketTimeout>30000</socketTimeout>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
                <name>Accept message if &quot;$(&apos;Http Method&apos;)&quot; equals &quot;put&quot;</name>
                <sequenceNumber>0</sequenceNumber>
                <field>$(&apos;Http Method&apos;)</field>
                <condition>EQUALS</condition>
                <values>
                  <string>&quot;put&quot;</string>
                </values>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>HTTP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>18</metaDataId>
          <name>Return Final Result</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if ($(&apos;Http Method&apos;).equals(&quot;get&quot;)) {	
	
	return $(&apos;d10&apos;); // return Http Get Method response
		
} else if ($(&apos;Http Method&apos;).equals(&quot;post&quot;)) {
	
	return $(&apos;d11&apos;); // return Http Post Method response
	
} else if ($(&apos;Http Method&apos;).equals(&quot;delete&quot;)) {
	
	return $(&apos;d20&apos;); // return Http Delete Method response
	
} else if ($(&apos;Http Method&apos;).equals(&quot;put&quot;)) {
	
	return $(&apos;d21&apos;); // return Http Put Method response
	
}

/*function errorCheck($data) 
{
	$var = JSON.parse(&quot;&apos;&quot;+$data+&quot;&apos;&quot;);
	return $var;
	if ($var.status.equals(&quot;success&quot;)) {
		return JSON.parse($data);
	} else return $var
}*/
</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.5.1">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.5.1">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <exportData>
        <metadata>
          <enabled>true</enabled>
          <lastModified>
            <time>1522771737228</time>
            <timezone>America/Santiago</timezone>
          </lastModified>
          <pruningSettings>
            <archiveEnabled>true</archiveEnabled>
          </pruningSettings>
        </metadata>
        <codeTemplateLibraries>
          <codeTemplateLibrary version="3.5.1">
            <id>4c88e558-4c6a-4c8c-9be8-df2d69915ab4</id>
            <name>Xml_Parsers</name>
            <revision>8</revision>
            <lastModified>
              <time>1523029733006</time>
              <timezone>America/Santiago</timezone>
            </lastModified>
            <description></description>
            <includeNewChannels>false</includeNewChannels>
            <enabledChannelIds>
              <string>bcd252d7-2eac-41f8-9220-4d52ef361d13</string>
              <string>4588f2cb-5cd1-403a-81b2-f721ece6502c</string>
            </enabledChannelIds>
            <disabledChannelIds/>
            <codeTemplates>
              <codeTemplate version="3.5.1">
                <id>78959c2f-6676-44c9-acd6-b83398a49f4b</id>
                <name>Parse Xml Parameters To Object</name>
                <revision>46</revision>
                <lastModified>
                  <time>1522766634526</time>
                  <timezone>America/Santiago</timezone>
                </lastModified>
                <contextSet>
                  <delegate>
                    <contextType>GLOBAL_POSTPROCESSOR</contextType>
                    <contextType>DESTINATION_DISPATCHER</contextType>
                    <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                    <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                    <contextType>CHANNEL_PREPROCESSOR</contextType>
                    <contextType>GLOBAL_UNDEPLOY</contextType>
                    <contextType>CHANNEL_ATTACHMENT</contextType>
                    <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                    <contextType>SOURCE_RECEIVER</contextType>
                    <contextType>CHANNEL_BATCH</contextType>
                    <contextType>GLOBAL_PREPROCESSOR</contextType>
                    <contextType>CHANNEL_DEPLOY</contextType>
                    <contextType>CHANNEL_UNDEPLOY</contextType>
                    <contextType>GLOBAL_DEPLOY</contextType>
                    <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  </delegate>
                </contextSet>
                <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
                  <type>FUNCTION</type>
                  <code>/**
	Modify the description here. Modify the function name and parameters as needed. One function per
	template is recommended; create a new code template for each new function.

	@param {String} arg1 - arg1 description
	@return {String} return description
*/
function parseXmlParametersToObject (xml)
{
	if (typeof xml !== &apos;undefined&apos;)
	{
		xml = xml.slice(&quot;&lt;Parameters&gt;&quot;.length, xml.length);
		xml = xml.slice(0, xml.length - &quot;&lt;/Parameters&gt;&quot;.length);
		
    		parameters = {};
		while (xml.length &gt; 0) {
    			var varName = [];
    			var varData = [];
			if (xml[0] == &apos;&lt;&apos;) {
    				xml = xml.slice(1);
           		count = 0;
        			while (xml[0] != &apos;&gt;&apos;) {
        				varName[count] = xml[0];
        				xml = xml.slice(1);
               		 count++;
        			}
        			xml = xml.slice(1);
            		count = 0;
            		while (xml[0] != &apos;&lt;&apos;) {
        				varData[count] = xml[0];
                		xml = xml.slice(1);
                		count++;
        			}
            		xml = xml.slice(varName.length + 3, xml.length);
            		parameters[varName.join(&quot;&quot;)] = varData.join(&quot;&quot;);
			}
		}
		return parameters;&#xd;
	} else {
		return {};
	}
}
</code>
                </properties>
              </codeTemplate>
            </codeTemplates>
          </codeTemplateLibrary>
        </codeTemplateLibraries>
      </exportData>
    </channel>
    <channel version="3.5.1">
      <id>4588f2cb-5cd1-403a-81b2-f721ece6502c</id>
      <nextMetaDataId>24</nextMetaDataId>
      <name>Nucleus To FHIR</name>
      <description></description>
      <revision>127</revision>
      <sourceConnector version="3.5.1">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.http.HttpReceiverProperties" version="3.5.1">
          <pluginProperties>
            <com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties version="3.5.1">
  <authType>NONE</authType>
            </com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties>
          </pluginProperties>
          <listenerConnectorProperties version="3.5.1">
            <host>0.0.0.0</host>
            <port>10001</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.5.1">
            <responseVariable>d18</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <xmlBody>true</xmlBody>
          <parseMultipart>true</parseMultipart>
          <includeMetadata>true</includeMetadata>
          <binaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</binaryMimeTypes>
          <binaryMimeTypesRegex>true</binaryMimeTypesRegex>
          <responseContentType>application/json</responseContentType>
          <responseDataTypeBinary>false</responseDataTypeBinary>
          <responseStatusCode>200</responseStatusCode>
          <responseHeaders class="linked-hash-map"/>
          <charset>DEFAULT_ENCODING</charset>
          <contextPath></contextPath>
          <timeout>0</timeout>
          <staticResources/>
        </properties>
        <transformer version="3.5.1">
          <elements>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>Url</name>
              <sequenceNumber>0</sequenceNumber>
              <variable>Url</variable>
              <mapping>sourceMap.get(&apos;contextPath&apos;)</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>GLOBAL_CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>Http Method</name>
              <sequenceNumber>1</sequenceNumber>
              <variable>Http Method</variable>
              <mapping>sourceMap.get(&apos;method&apos;).toLowerCase()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>Channel Url</name>
              <sequenceNumber>2</sequenceNumber>
              <variable>Channel Url</variable>
              <mapping>&apos;http://localhost:10001&apos;</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.messagebuilder.MessageBuilderStep>
              <name></name>
              <sequenceNumber>3</sequenceNumber>
              <messageSegment>tmp</messageSegment>
              <mapping>parseXmlParametersToObject(msg[&apos;Parameters&apos;].toString())</mapping>
              <defaultValue></defaultValue>
              <replacements/>
            </com.mirth.connect.plugins.messagebuilder.MessageBuilderStep>
          </elements>
          <inboundTemplate encoding="base64">PEh0dHBSZXF1ZXN0Pg0KICAgIDxSZW1vdGVBZGRyZXNzPjA6MDowOjA6MDowOjA6MTwvUmVtb3Rl
QWRkcmVzcz4NCiAgICA8UmVxdWVzdFVybD5odHRwOi8vbG9jYWxob3N0OjEwMDAwL2FwaS91c2Vy
czwvUmVxdWVzdFVybD4NCiAgICA8TWV0aG9kPlBPU1Q8L01ldGhvZD4NCiAgICA8UmVxdWVzdFBh
dGgvPg0KICAgIDxSZXF1ZXN0Q29udGV4dFBhdGg+L2FwaS91c2VyczwvUmVxdWVzdENvbnRleHRQ
YXRoPg0KICAgIDxQYXJhbWV0ZXJzPg0KICAgICAgICA8bmFtZT5wZXBlPC9uYW1lPg0KICAgICAg
ICA8bGFzdF9uYW1lPnRvcnJlczwvbGFzdF9uYW1lPg0KICAgICAgICA8ZW1haWw+cWRxZEBnbWFp
bC5jb208L2VtYWlsPg0KICAgICAgICA8c3RhdHVzPjE8L3N0YXR1cz4NCiAgICA8L1BhcmFtZXRl
cnM+DQogICAgPEhlYWRlcj4NCiAgICAgICAgPENhY2hlLUNvbnRyb2w+bm8tY2FjaGU8L0NhY2hl
LUNvbnRyb2w+DQogICAgICAgIDxBY2NlcHQ+Ki8qPC9BY2NlcHQ+DQogICAgICAgIDxVc2VyLUFn
ZW50PlBvc3RtYW5SdW50aW1lLzcuMS4xPC9Vc2VyLUFnZW50Pg0KICAgICAgICA8Q29ubmVjdGlv
bj5rZWVwLWFsaXZlPC9Db25uZWN0aW9uPg0KICAgICAgICA8UG9zdG1hbi1Ub2tlbj5lNWM3OTkz
Ny01MjY0LTQyMGUtYjRhZi00Y2RmNzdlMTY0NjU8L1Bvc3RtYW4tVG9rZW4+DQogICAgICAgIDxI
b3N0PmxvY2FsaG9zdDoxMDAwMDwvSG9zdD4NCiAgICAgICAgPEFjY2VwdC1FbmNvZGluZz5nemlw
LCBkZWZsYXRlPC9BY2NlcHQtRW5jb2Rpbmc+DQogICAgICAgIDxDb250ZW50LUxlbmd0aD41ODwv
Q29udGVudC1MZW5ndGg+DQogICAgICAgIDxDb250ZW50LVR5cGU+YXBwbGljYXRpb24veC13d3ct
Zm9ybS11cmxlbmNvZGVkPC9Db250ZW50LVR5cGU+DQogICAgPC9IZWFkZXI+DQogICAgPENvbnRl
bnQgZW5jb2Rpbmc9IkJhc2U2NCIgbXVsdGlwYXJ0PSJubyIvPg0KPC9IdHRwUmVxdWVzdD4NCg==
</inboundTemplate>
          <outboundTemplate encoding="base64">e30=</outboundTemplate>
          <inboundDataType>XML</inboundDataType>
          <outboundDataType>JSON</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.1">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.1">
              <stripNamespaces>true</stripNamespaces>
            </serializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.1">
              <splitType>Element_Name</splitType>
              <elementName></elementName>
              <level>1</level>
              <query></query>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
            <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
              <splitType>JavaScript</splitType>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.5.1">
          <elements/>
        </filter>
        <transportName>HTTP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.5.1">
          <metaDataId>10</metaDataId>
          <name>Http Get</name>
          <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <host>http://54.210.72.106:81${Url}</host>
            <useProxyServer>false</useProxyServer>
            <proxyAddress></proxyAddress>
            <proxyPort></proxyPort>
            <method>get</method>
            <headers class="linked-hash-map"/>
            <parameters class="linked-hash-map"/>
            <responseXmlBody>false</responseXmlBody>
            <responseParseMultipart>true</responseParseMultipart>
            <responseIncludeMetadata>false</responseIncludeMetadata>
            <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
            <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
            <multipart>false</multipart>
            <useAuthentication>false</useAuthentication>
            <authenticationType>Basic</authenticationType>
            <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
            <username></username>
            <password></password>
            <content></content>
            <contentType>text/plain</contentType>
            <dataTypeBinary>false</dataTypeBinary>
            <charset>UTF-8</charset>
            <socketTimeout>30000</socketTimeout>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
                <name>Accept message if &quot;$(&apos;Http Method&apos;)&quot; equals &quot;get&quot;</name>
                <sequenceNumber>0</sequenceNumber>
                <field>$(&apos;Http Method&apos;)</field>
                <condition>EQUALS</condition>
                <values>
                  <string>&quot;get&quot;</string>
                </values>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>HTTP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>11</metaDataId>
          <name>Http Post</name>
          <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <host>http://54.210.72.106:81${Url}</host>
            <useProxyServer>false</useProxyServer>
            <proxyAddress></proxyAddress>
            <proxyPort></proxyPort>
            <method>post</method>
            <headers class="linked-hash-map"/>
            <parameters class="linked-hash-map"/>
            <responseXmlBody>false</responseXmlBody>
            <responseParseMultipart>true</responseParseMultipart>
            <responseIncludeMetadata>false</responseIncludeMetadata>
            <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
            <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
            <multipart>false</multipart>
            <useAuthentication>false</useAuthentication>
            <authenticationType>Basic</authenticationType>
            <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
            <username></username>
            <password></password>
            <content>${message.encodedData}</content>
            <contentType>application/json</contentType>
            <dataTypeBinary>false</dataTypeBinary>
            <charset>UTF-8</charset>
            <socketTimeout>30000</socketTimeout>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
                <name>Accept message if &quot;$(&apos;Http Method&apos;)&quot; equals &quot;post&quot;</name>
                <sequenceNumber>0</sequenceNumber>
                <field>$(&apos;Http Method&apos;)</field>
                <condition>EQUALS</condition>
                <values>
                  <string>&quot;post&quot;</string>
                </values>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>HTTP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>20</metaDataId>
          <name>Http Delete</name>
          <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <host>http://54.210.72.106:81${Url}</host>
            <useProxyServer>false</useProxyServer>
            <proxyAddress></proxyAddress>
            <proxyPort></proxyPort>
            <method>delete</method>
            <headers class="linked-hash-map"/>
            <parameters class="linked-hash-map"/>
            <responseXmlBody>false</responseXmlBody>
            <responseParseMultipart>true</responseParseMultipart>
            <responseIncludeMetadata>false</responseIncludeMetadata>
            <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
            <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
            <multipart>false</multipart>
            <useAuthentication>false</useAuthentication>
            <authenticationType>Basic</authenticationType>
            <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
            <username></username>
            <password></password>
            <content></content>
            <contentType>text/plain</contentType>
            <dataTypeBinary>false</dataTypeBinary>
            <charset>UTF-8</charset>
            <socketTimeout>30000</socketTimeout>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
                <name>Accept message if &quot;$(&apos;Http Method&apos;)&quot; equals &quot;delete&quot;</name>
                <sequenceNumber>0</sequenceNumber>
                <field>$(&apos;Http Method&apos;)</field>
                <condition>EQUALS</condition>
                <values>
                  <string>&quot;delete&quot;</string>
                </values>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>HTTP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>21</metaDataId>
          <name>Http Put</name>
          <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <host>http://54.210.72.106:81${Url}</host>
            <useProxyServer>false</useProxyServer>
            <proxyAddress></proxyAddress>
            <proxyPort></proxyPort>
            <method>put</method>
            <headers class="linked-hash-map"/>
            <parameters class="linked-hash-map"/>
            <responseXmlBody>false</responseXmlBody>
            <responseParseMultipart>true</responseParseMultipart>
            <responseIncludeMetadata>false</responseIncludeMetadata>
            <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
            <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
            <multipart>false</multipart>
            <useAuthentication>false</useAuthentication>
            <authenticationType>Basic</authenticationType>
            <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
            <username></username>
            <password></password>
            <content>${message.encodedData}</content>
            <contentType>application/json</contentType>
            <dataTypeBinary>false</dataTypeBinary>
            <charset>UTF-8</charset>
            <socketTimeout>30000</socketTimeout>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
                <name>Accept message if &quot;$(&apos;Http Method&apos;)&quot; equals &quot;put&quot;</name>
                <sequenceNumber>0</sequenceNumber>
                <field>$(&apos;Http Method&apos;)</field>
                <condition>EQUALS</condition>
                <values>
                  <string>&quot;put&quot;</string>
                </values>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>HTTP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.1">
          <metaDataId>18</metaDataId>
          <name>Return Final Result</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.1">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.1">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if ($(&apos;Http Method&apos;).equals(&quot;get&quot;)) {	
	
	return errorCheck($(&apos;d10&apos;)); // return Http Get Method response
		
} else if ($(&apos;Http Method&apos;).equals(&quot;post&quot;)) {
	
	return errorCheck($(&apos;d11&apos;)); // return Http Post Method response
	
} else if ($(&apos;Http Method&apos;).equals(&quot;delete&quot;)) {
	
	return errorCheck($(&apos;d20&apos;)); // return Http Delete Method response
	
} else if ($(&apos;Http Method&apos;).equals(&quot;put&quot;)) {
	
	return errorCheck($(&apos;d21&apos;)); // return Http Put Method response
	
}

function errorCheck($data) 
{
	if ($data.error !== null &amp;&amp; $data.error.slice(34,35) == &apos;&lt;&apos;)
	{
		tmp = $data;
		return &apos;{}&apos;;
	} else {
		return $data;
	}
}
</script>
          </properties>
          <transformer version="3.5.1">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.1">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
                <name>Resource Response</name>
                <sequenceNumber>0</sequenceNumber>
                <script>if (msg[&apos;total&apos;] == 1) 
{
	//resourceType
	tmp[&apos;resourceType&apos;] = msg[&apos;resource&apos;];
	
	//id
	tmp[&apos;id&apos;] =  msg[&apos;data&apos;][&apos;id&apos;];

	//meta
	tmp[&apos;meta&apos;] = {};
	tmp[&apos;meta&apos;][&apos;lastUpdated&apos;] = msg[&apos;data&apos;][&apos;attributes&apos;][&apos;updated_at&apos;];
	
	//text
	tmp[&apos;text&apos;] = {};
	tmp[&apos;text&apos;][&apos;status&apos;] = msg[&apos;status&apos;];
	
	//active
	tmp[&apos;active&apos;] = msg[&apos;data&apos;][&apos;attributes&apos;][&apos;status&apos;];

	switch( msg[&apos;resource&apos;]) 
	{
		case &quot;users&quot;:
			//gender
			tmp[&apos;gender&apos;] = &quot;unknow&quot;;
	
			//name
			tmp[&apos;name&apos;] = {};
			tmp[&apos;name&apos;][&apos;family&apos;] = msg[&apos;data&apos;][&apos;attributes&apos;][&apos;name&apos;].split(&quot; &quot;,2)[1];
			tmp[&apos;name&apos;][&apos;given&apos;] = msg[&apos;data&apos;][&apos;attributes&apos;][&apos;name&apos;].split(&quot; &quot;,1);
			break;

		case &quot;Company&quot;:
			tmp[&apos;name&apos;] = msg[&apos;data&apos;][&apos;attributes&apos;][&apos;name&apos;];
			break;
	}


	
	//managingOrganization
	tmp[&apos;managingOrganization&apos;] = {};
	tmp[&apos;managingOrganization&apos;][&apos;reference&apos;] = $(&apos;Channel Url&apos;).concat($(&apos;Url&apos;));
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
                <name>Bundle Response</name>
                <sequenceNumber>1</sequenceNumber>
                <script>if (msg[&apos;total&apos;] &gt; 1) 
{
	//resourceType
	tmp[&apos;resourceType&apos;] = &apos;Bundle&apos;;
	
	//type
	tmp[&apos;type&apos;] = &apos;collection&apos;;
	
	//total
	tmp[&apos;total&apos;] = msg[&apos;total&apos;];

	//entry
	tmp[&apos;entry&apos;] = [];
	
	for (i = 0; i &lt; msg[&apos;total&apos;]; i++)
	{
		tmp[&apos;entry&apos;][i] = {}
		tmp[&apos;entry&apos;][i][&apos;fullUrl&apos;] = $(&apos;Channel Url&apos;).concat($(&apos;Url&apos;).concat(&apos;/&apos;).concat(msg[&apos;data&apos;][i][&apos;id&apos;]));

		//resource
		tmp[&apos;entry&apos;][i][&apos;resource&apos;] = {};
		tmp[&apos;entry&apos;][i][&apos;resource&apos;][&apos;meta&apos;] = {};
		tmp[&apos;entry&apos;][i][&apos;resource&apos;][&apos;text&apos;] = {};
		tmp[&apos;entry&apos;][i][&apos;resource&apos;][&apos;name&apos;] = [{}];
		
		tmp[&apos;entry&apos;][i][&apos;resource&apos;][&apos;resourceType&apos;] = msg[&apos;resource&apos;];
		tmp[&apos;entry&apos;][i][&apos;resource&apos;][&apos;id&apos;] = msg[&apos;data&apos;][i][&apos;id&apos;];
		tmp[&apos;entry&apos;][i][&apos;resource&apos;][&apos;meta&apos;][&apos;lastUpdated&apos;] = msg[&apos;data&apos;][i][&apos;updated_at&apos;];
		tmp[&apos;entry&apos;][i][&apos;resource&apos;][&apos;text&apos;][&apos;status&apos;] = msg[&apos;data&apos;][i][&apos;status&apos;];
		tmp[&apos;entry&apos;][i][&apos;resource&apos;][&apos;name&apos;][0][&apos;family&apos;] = msg[&apos;data&apos;][i][&apos;last_name&apos;];
		tmp[&apos;entry&apos;][i][&apos;resource&apos;][&apos;name&apos;][0][&apos;given&apos;] = msg[&apos;data&apos;][i][&apos;name&apos;];
	}
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
                <name>Resource Error Response</name>
                <sequenceNumber>2</sequenceNumber>
                <script>if (msg[&apos;status&apos;] == &quot;error&quot;) 
{
	//text
	tmp[&apos;text&apos;] = {};
	tmp[&apos;text&apos;][&apos;status&apos;] = msg[&apos;status&apos;];
	
	//issue
	tmp[&apos;issue&apos;] = {};
	tmp[&apos;issue&apos;][&apos;diagnostics&apos;] = msg[&apos;errors&apos;][&apos;detail&apos;];
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
                <name>Server Error Response</name>
                <sequenceNumber>3</sequenceNumber>
                <script>if (msg[&apos;status&apos;] == null)
{
	tmp = msg;
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">e30=</inboundTemplate>
            <outboundTemplate encoding="base64">e30=</outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.1">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.1">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.1">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.5.1">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.5.1">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <exportData>
        <metadata>
          <enabled>true</enabled>
          <lastModified>
            <time>1523388024438</time>
            <timezone>America/Santiago</timezone>
          </lastModified>
          <pruningSettings>
            <archiveEnabled>true</archiveEnabled>
          </pruningSettings>
        </metadata>
        <codeTemplateLibraries>
          <codeTemplateLibrary version="3.5.1">
            <id>4c88e558-4c6a-4c8c-9be8-df2d69915ab4</id>
            <name>Xml_Parsers</name>
            <revision>8</revision>
            <lastModified>
              <time>1523029733006</time>
              <timezone>America/Santiago</timezone>
            </lastModified>
            <description></description>
            <includeNewChannels>false</includeNewChannels>
            <enabledChannelIds>
              <string>bcd252d7-2eac-41f8-9220-4d52ef361d13</string>
              <string>4588f2cb-5cd1-403a-81b2-f721ece6502c</string>
            </enabledChannelIds>
            <disabledChannelIds/>
            <codeTemplates>
              <codeTemplate version="3.5.1">
                <id>78959c2f-6676-44c9-acd6-b83398a49f4b</id>
                <name>Parse Xml Parameters To Object</name>
                <revision>46</revision>
                <lastModified>
                  <time>1522766634526</time>
                  <timezone>America/Santiago</timezone>
                </lastModified>
                <contextSet>
                  <delegate>
                    <contextType>GLOBAL_POSTPROCESSOR</contextType>
                    <contextType>DESTINATION_DISPATCHER</contextType>
                    <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                    <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                    <contextType>CHANNEL_PREPROCESSOR</contextType>
                    <contextType>GLOBAL_UNDEPLOY</contextType>
                    <contextType>CHANNEL_ATTACHMENT</contextType>
                    <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                    <contextType>SOURCE_RECEIVER</contextType>
                    <contextType>CHANNEL_BATCH</contextType>
                    <contextType>GLOBAL_PREPROCESSOR</contextType>
                    <contextType>CHANNEL_DEPLOY</contextType>
                    <contextType>CHANNEL_UNDEPLOY</contextType>
                    <contextType>GLOBAL_DEPLOY</contextType>
                    <contextType>CHANNEL_POSTPROCESSOR</contextType>
                  </delegate>
                </contextSet>
                <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
                  <type>FUNCTION</type>
                  <code>/**
	Modify the description here. Modify the function name and parameters as needed. One function per
	template is recommended; create a new code template for each new function.

	@param {String} arg1 - arg1 description
	@return {String} return description
*/
function parseXmlParametersToObject (xml)
{
	if (typeof xml !== &apos;undefined&apos;)
	{
		xml = xml.slice(&quot;&lt;Parameters&gt;&quot;.length, xml.length);
		xml = xml.slice(0, xml.length - &quot;&lt;/Parameters&gt;&quot;.length);
		
    		parameters = {};
		while (xml.length &gt; 0) {
    			var varName = [];
    			var varData = [];
			if (xml[0] == &apos;&lt;&apos;) {
    				xml = xml.slice(1);
           		count = 0;
        			while (xml[0] != &apos;&gt;&apos;) {
        				varName[count] = xml[0];
        				xml = xml.slice(1);
               		 count++;
        			}
        			xml = xml.slice(1);
            		count = 0;
            		while (xml[0] != &apos;&lt;&apos;) {
        				varData[count] = xml[0];
                		xml = xml.slice(1);
                		count++;
        			}
            		xml = xml.slice(varName.length + 3, xml.length);
            		parameters[varName.join(&quot;&quot;)] = varData.join(&quot;&quot;);
			}
		}
		return parameters;&#xd;
	} else {
		return {};
	}
}
</code>
                </properties>
              </codeTemplate>
            </codeTemplates>
          </codeTemplateLibrary>
        </codeTemplateLibraries>
      </exportData>
    </channel>
  </channels>
</channelGroup>