<serverConfiguration version="3.5.2">
  <date>2018-05-16 09:45:30</date>
  <channelGroups>
    <channelGroup version="3.5.2">
      <id>efe99756-42d4-4c89-9291-e70cc33fdaf2</id>
      <name>HolyDays</name>
      <revision>3</revision>
      <lastModified>
        <time>1523650378855</time>
        <timezone>America/Santiago</timezone>
      </lastModified>
      <description></description>
      <channels>
        <channel version="3.5.2">
          <id>74fed4cb-0aa0-4289-9cbf-529bf8977107</id>
          <revision>0</revision>
        </channel>
        <channel version="3.5.2">
          <id>44a667ae-1b8a-4d77-9760-335aafb850d0</id>
          <revision>0</revision>
        </channel>
      </channels>
    </channelGroup>
  </channelGroups>
  <channels>
    <channel version="3.5.2">
      <id>44a667ae-1b8a-4d77-9760-335aafb850d0</id>
      <nextMetaDataId>5</nextMetaDataId>
      <name>Holiday Sender Slave</name>
      <description></description>
      <revision>147</revision>
      <sourceConnector version="3.5.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.vm.VmReceiverProperties" version="3.5.2">
          <pluginProperties/>
          <sourceConnectorProperties version="3.5.2">
            <responseVariable>d1</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
        </properties>
        <transformer version="3.5.2">
          <elements>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>require</name>
              <sequenceNumber>0</sequenceNumber>
              <variable>require</variable>
              <mapping>msg[&apos;require&apos;]</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.messagebuilder.MessageBuilderStep>
              <name></name>
              <sequenceNumber>1</sequenceNumber>
              <messageSegment>tmp</messageSegment>
              <mapping>msg</mapping>
              <defaultValue></defaultValue>
              <replacements/>
            </com.mirth.connect.plugins.messagebuilder.MessageBuilderStep>
            <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
              <name></name>
              <sequenceNumber>2</sequenceNumber>
              <script>switch (String($(&apos;require&apos;)))
{
	case &quot;holidayName&quot;:
		channelMap.put(&apos;Holiday Code&apos;, validate(msg[&apos;holidayCode&apos;], new Array()));
		channelMap.put(&apos;Soap Payload&apos;, validate(getXmlPayload(2,msg), new Array()));
		break;
	default:
		channelMap.put(&apos;Soap Payload&apos;, validate(&quot;&quot;, &apos;&apos;, new Array()));	
}</script>
            </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
          </elements>
          <inboundTemplate encoding="base64"></inboundTemplate>
          <outboundTemplate encoding="base64">ew0KfQ==</outboundTemplate>
          <inboundDataType>JSON</inboundDataType>
          <outboundDataType>JSON</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
            <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
              <splitType>JavaScript</splitType>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
            <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
              <splitType>JavaScript</splitType>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.5.2">
          <elements/>
        </filter>
        <transportName>Channel Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.5.2">
          <metaDataId>1</metaDataId>
          <name>Destination 1</name>
          <properties class="com.mirth.connect.connectors.ws.WebServiceDispatcherProperties" version="3.5.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <wsdlUrl>http://www.holidaywebservice.com/HolidayService_v2/HolidayService2.asmx?WSDL</wsdlUrl>
            <service>{http://www.holidaywebservice.com/HolidayService_v2/}HolidayService2</service>
            <port>{http://www.holidaywebservice.com/HolidayService_v2/}HolidayService2Soap12</port>
            <operation>GetCountriesAvailable</operation>
            <locationURI>http://www.holidaywebservice.com/HolidayService_v2/HolidayService2.asmx</locationURI>
            <socketTimeout>30000</socketTimeout>
            <useAuthentication>false</useAuthentication>
            <username></username>
            <password></password>
            <envelope>${maps.get(&apos;Soap Payload&apos;)}</envelope>
            <oneWay>false</oneWay>
            <headers/>
            <useMtom>false</useMtom>
            <attachmentNames/>
            <attachmentContents/>
            <attachmentTypes/>
            <soapAction>http://www.holidaywebservice.com/HolidayService_v2/HolidayService2.asmx</soapAction>
            <wsdlDefinitionMap>
              <map class="linked-hash-map">
                <entry>
                  <string>{http://www.holidaywebservice.com/HolidayService_v2/}HolidayService2</string>
                  <com.mirth.connect.connectors.ws.DefinitionServiceMap_-DefinitionPortMap>
                    <map class="linked-hash-map">
                      <entry>
                        <string>{http://www.holidaywebservice.com/HolidayService_v2/}HolidayService2Soap12</string>
                        <com.mirth.connect.connectors.ws.DefinitionServiceMap_-PortInformation>
                          <operations>
                            <string>GetCountriesAvailable</string>
                            <string>GetHolidayDate</string>
                            <string>GetHolidaysAvailable</string>
                            <string>GetHolidaysForDateRange</string>
                            <string>GetHolidaysForMonth</string>
                            <string>GetHolidaysForYear</string>
                          </operations>
                          <locationURI>http://www.holidaywebservice.com/HolidayService_v2/HolidayService2.asmx</locationURI>
                        </com.mirth.connect.connectors.ws.DefinitionServiceMap_-PortInformation>
                      </entry>
                      <entry>
                        <string>{http://www.holidaywebservice.com/HolidayService_v2/}HolidayService2Soap</string>
                        <com.mirth.connect.connectors.ws.DefinitionServiceMap_-PortInformation>
                          <operations>
                            <string>GetCountriesAvailable</string>
                            <string>GetHolidayDate</string>
                            <string>GetHolidaysAvailable</string>
                            <string>GetHolidaysForDateRange</string>
                            <string>GetHolidaysForMonth</string>
                            <string>GetHolidaysForYear</string>
                          </operations>
                          <locationURI>http://www.holidaywebservice.com/HolidayService_v2/HolidayService2.asmx</locationURI>
                        </com.mirth.connect.connectors.ws.DefinitionServiceMap_-PortInformation>
                      </entry>
                    </map>
                  </com.mirth.connect.connectors.ws.DefinitionServiceMap_-DefinitionPortMap>
                </entry>
              </map>
            </wsdlDefinitionMap>
          </properties>
          <transformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64">e30=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>XML</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.2">
                <stripNamespaces>false</stripNamespaces>
              </serializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.2">
                <splitType>Element_Name</splitType>
                <elementName></elementName>
                <level>1</level>
                <query></query>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.2">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
                <sequenceNumber>0</sequenceNumber>
                <script>var senderSlaveResult = {};

switch (String($(&apos;require&apos;)))
{
	case &quot;holidayName&quot;:
		
		for (var i = 0; i &lt; msg.*::[&apos;Body&apos;].*::[&apos;GetHolidaysAvailableResponse&apos;].*::[&apos;GetHolidaysAvailableResult&apos;].*::[&apos;HolidayCode&apos;].length(); i++)
		{	
			if (String($(&apos;Holiday Code&apos;)).equals(msg.*::[&apos;Body&apos;].*::[&apos;GetHolidaysAvailableResponse&apos;].*::[&apos;GetHolidaysAvailableResult&apos;].*::[&apos;HolidayCode&apos;][i].*::[&apos;Code&apos;].toString()))
			{
				tmp[&apos;holidayName&apos;] = msg.*::[&apos;Body&apos;].*::[&apos;GetHolidaysAvailableResponse&apos;].*::[&apos;GetHolidaysAvailableResult&apos;].*::[&apos;HolidayCode&apos;][i].*::[&apos;Description&apos;];
			}
		}
				
		break;
}

globalMap.put(&apos;Sender Slave Result&apos;, validate(senderSlaveResult, &apos;&apos;, new Array()));</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64">e30=</outboundTemplate>
            <inboundDataType>XML</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.2">
                <stripNamespaces>false</stripNamespaces>
              </serializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.2">
                <splitType>Element_Name</splitType>
                <elementName></elementName>
                <level>1</level>
                <query></query>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.2">
            <elements/>
          </filter>
          <transportName>Web Service Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.5.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.5.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <exportData>
        <metadata>
          <enabled>true</enabled>
          <lastModified>
            <time>1526325935300</time>
            <timezone>America/Santiago</timezone>
          </lastModified>
          <pruningSettings>
            <archiveEnabled>true</archiveEnabled>
          </pruningSettings>
        </metadata>
      </exportData>
    </channel>
    <channel version="3.5.2">
      <id>74fed4cb-0aa0-4289-9cbf-529bf8977107</id>
      <nextMetaDataId>8</nextMetaDataId>
      <name>HolyDays Api Service</name>
      <description></description>
      <revision>226</revision>
      <sourceConnector version="3.5.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.http.HttpReceiverProperties" version="3.5.2">
          <pluginProperties>
            <com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties version="3.5.2">
  <authType>NONE</authType>
            </com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties>
          </pluginProperties>
          <listenerConnectorProperties version="3.5.2">
            <host>0.0.0.0</host>
            <port>10002</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.5.2">
            <responseVariable>d1</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <xmlBody>true</xmlBody>
          <parseMultipart>true</parseMultipart>
          <includeMetadata>false</includeMetadata>
          <binaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</binaryMimeTypes>
          <binaryMimeTypesRegex>true</binaryMimeTypesRegex>
          <responseContentType>application/json</responseContentType>
          <responseDataTypeBinary>false</responseDataTypeBinary>
          <responseStatusCode></responseStatusCode>
          <responseHeaders class="linked-hash-map"/>
          <charset>UTF-8</charset>
          <contextPath></contextPath>
          <timeout>0</timeout>
          <staticResources/>
        </properties>
        <transformer version="3.5.2">
          <elements>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>Url HolyDays Service</name>
              <sequenceNumber>0</sequenceNumber>
              <variable>Url HolyDays Service</variable>
              <mapping>&quot;http://www.holidaywebservice.com/HolidayService_v2/HolidayService2.asmx?WSDL&quot;</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>EndPoint</name>
              <sequenceNumber>1</sequenceNumber>
              <variable>EndPoint</variable>
              <mapping>sourceMap.get(&apos;contextPath&apos;)</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>Http Method</name>
              <sequenceNumber>2</sequenceNumber>
              <variable>Http Method</variable>
              <mapping>sourceMap.get(&apos;method&apos;).toLowerCase()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
          </elements>
          <inboundTemplate encoding="base64">e30=</inboundTemplate>
          <outboundTemplate encoding="base64">e30=</outboundTemplate>
          <inboundDataType>XML</inboundDataType>
          <outboundDataType>JSON</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.2">
              <stripNamespaces>true</stripNamespaces>
            </serializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.2">
              <splitType>Element_Name</splitType>
              <elementName></elementName>
              <level>1</level>
              <query></query>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
            <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
              <splitType>JavaScript</splitType>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.5.2">
          <elements/>
        </filter>
        <transportName>HTTP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.5.2">
          <metaDataId>3</metaDataId>
          <name>EndPoint Parser</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>parseEndPoint = $(&apos;EndPoint&apos;).split(&quot;/api/&quot;)[1];

parseEndPoint = parseEndPoint.split(&quot;/&quot;);

channelMap.put(&apos;uriFragment1&apos;, validate(parseEndPoint[0], &apos;&apos;, new Array()));

channelMap.put(&apos;uriFragment2&apos;, validate(parseEndPoint[1], &apos;&apos;, new Array()));

channelMap.put(&apos;uriFragment3&apos;, validate(parseEndPoint[2], &apos;&apos;, new Array()));

channelMap.put(&apos;uriFragment4&apos;, validate(parseEndPoint[3], &apos;&apos;, new Array()));

channelMap.put(&apos;uriFragment5&apos;, validate(parseEndPoint[4], &apos;&apos;, new Array()));</script>
          </properties>
          <transformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.2">
            <elements/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.2">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.2">
          <metaDataId>2</metaDataId>
          <name>Soap Operation Selector</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>switch (String($(&apos;uriFragment1&apos;)))
{
	case &apos;countries&apos;://	api/countries
		switch (String($(&apos;uriFragment2&apos;)))
		{
			case &apos;&apos;://	api/countries/
				switch (String($(&apos;Http Method&apos;)))
				{
					case &apos;get&apos;:// Get api/countries
						channelMap.put(&apos;singularResourceName&apos;, validate(&apos;Country&apos;, &apos;&apos;, new Array()));
						channelMap.put(&apos;pluralResourceName&apos;, validate(&apos;Countries&apos;, &apos;&apos;, new Array()));
						channelMap.put(&apos;Soap Payload&apos;, validate(getXmlPayload(1), &apos;&apos;, new Array()));
						break;
				}
				break;
			default:// api/countries/{countryName}
				switch (String($(&apos;uriFragment3&apos;))) {
					case &apos;&apos;:// api/countries/{countryName}/
						break;
					case &apos;holidays&apos;: //	api/countries/{countryName}/holidays
						switch (String($(&apos;uriFragment4&apos;)))
						{
							case &apos;&apos;:
								switch (String($(&apos;Http Method&apos;)))
								{
									case &apos;get&apos;:// Get api/countries/{countryName}/holidays/
										channelMap.put(&apos;singularResourceName&apos;, validate(&apos;Holiday&apos;, &apos;&apos;, new Array()));
										channelMap.put(&apos;pluralResourceName&apos;, validate(&apos;Holidays&apos;, &apos;&apos;, new Array()));
										payloadData = {&apos;countryCode&apos;: $(&apos;uriFragment2&apos;).toString()};
										channelMap.put(&apos;Soap Payload&apos;, validate(getXmlPayload(2, payloadData), &apos;&apos;, new Array()));	
										break;
								}
								break;
							default:
								switch (String($(&apos;Http Method&apos;)))
								{
									case &apos;get&apos;:// Get api/countries/{countryName}/holidays/{holidayName}	
										channelMap.put(&apos;singularResourceName&apos;, validate(&apos;Holiday&apos;, &apos;&apos;, new Array()));
										channelMap.put(&apos;pluralResourceName&apos;, validate(&apos;Holidays&apos;, &apos;&apos;, new Array()));
										payloadData = {&apos;countryCode&apos;: $(&apos;uriFragment2&apos;).toString(),
													&apos;holidayCode&apos;: $(&apos;uriFragment4&apos;).toString()};

										var extraRequest = [];
										extraRequest[0] = {&apos;require&apos;: &apos;holidayName&apos;, &apos;countryCode&apos;: $(&apos;uriFragment2&apos;), &apos;holidayCode&apos;: $(&apos;uriFragment4&apos;)};
	
										channelMap.put(&apos;extraRequest&apos;, validate(extraRequest, &apos;&apos;, new Array()));									
										channelMap.put(&apos;payload&apos;, validate(payloadData, &apos;&apos;, new Array()));
										channelMap.put(&apos;Soap Payload&apos;, validate(getXmlPayload(3, payloadData), &apos;&apos;, new Array()));	
										break;
								}
								break;
					}
					break;
				}
				break;
		}
		break;
}</script>
          </properties>
          <transformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.2">
            <elements/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.2">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.2">
          <metaDataId>7</metaDataId>
          <name>Extra Data Request</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>for (var i = 0; i &lt; $(&apos;extraRequest&apos;).length; i++)
{
	flagFirst = true;
	json = 	&apos;{&apos;;
		
	for (var key in $(&apos;extraRequest&apos;)[i])
	{
		if (!flagFirst)
		{
			json = json + &apos;, &apos;;
		} else flagFirst = false;

		json = json + &apos;&quot;&apos;  + key + &apos;&quot; : &quot;&apos; + ($(&apos;extraRequest&apos;)[i])[key] + &apos;&quot;&apos;;					
	}
	json = json + &apos;}&apos;;

	var response = router.routeMessage(&apos;Holiday Sender Slave&apos;, json);
	
	$(&apos;extraRequest&apos;)[i][&apos;result&apos;] = JSON.parse(response.getMessage());
}
</script>
          </properties>
          <transformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.2">
            <elements/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.2">
            <elements>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
                <name>Accept message if &quot;$(&apos;extraRequest&apos;)&quot; exists</name>
                <sequenceNumber>0</sequenceNumber>
                <field>$(&apos;extraRequest&apos;)</field>
                <condition>EXISTS</condition>
                <values/>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.2">
          <metaDataId>1</metaDataId>
          <name>Soap Sender (HolyDays Service)</name>
          <properties class="com.mirth.connect.connectors.ws.WebServiceDispatcherProperties" version="3.5.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <wsdlUrl>http://www.holidaywebservice.com/HolidayService_v2/HolidayService2.asmx?WSDL</wsdlUrl>
            <service>{http://www.holidaywebservice.com/HolidayService_v2/}HolidayService2</service>
            <port>{http://www.holidaywebservice.com/HolidayService_v2/}HolidayService2Soap12</port>
            <operation>GetCountriesAvailable</operation>
            <locationURI>http://www.holidaywebservice.com/HolidayService_v2/HolidayService2.asmx</locationURI>
            <socketTimeout>30000</socketTimeout>
            <useAuthentication>false</useAuthentication>
            <username></username>
            <password></password>
            <envelope>${maps.get(&apos;Soap Payload&apos;)}</envelope>
            <oneWay>false</oneWay>
            <headers/>
            <useMtom>false</useMtom>
            <attachmentNames/>
            <attachmentContents/>
            <attachmentTypes/>
            <soapAction>http://www.holidaywebservice.com/HolidayService_v2/HolidayService2.asmx</soapAction>
            <wsdlDefinitionMap>
              <map class="linked-hash-map">
                <entry>
                  <string>{http://www.holidaywebservice.com/HolidayService_v2/}HolidayService2</string>
                  <com.mirth.connect.connectors.ws.DefinitionServiceMap_-DefinitionPortMap>
                    <map class="linked-hash-map">
                      <entry>
                        <string>{http://www.holidaywebservice.com/HolidayService_v2/}HolidayService2Soap12</string>
                        <com.mirth.connect.connectors.ws.DefinitionServiceMap_-PortInformation>
                          <operations>
                            <string>GetCountriesAvailable</string>
                            <string>GetHolidayDate</string>
                            <string>GetHolidaysAvailable</string>
                            <string>GetHolidaysForDateRange</string>
                            <string>GetHolidaysForMonth</string>
                            <string>GetHolidaysForYear</string>
                          </operations>
                          <locationURI>http://www.holidaywebservice.com/HolidayService_v2/HolidayService2.asmx</locationURI>
                        </com.mirth.connect.connectors.ws.DefinitionServiceMap_-PortInformation>
                      </entry>
                      <entry>
                        <string>{http://www.holidaywebservice.com/HolidayService_v2/}HolidayService2Soap</string>
                        <com.mirth.connect.connectors.ws.DefinitionServiceMap_-PortInformation>
                          <operations>
                            <string>GetCountriesAvailable</string>
                            <string>GetHolidayDate</string>
                            <string>GetHolidaysAvailable</string>
                            <string>GetHolidaysForDateRange</string>
                            <string>GetHolidaysForMonth</string>
                            <string>GetHolidaysForYear</string>
                          </operations>
                          <locationURI>http://www.holidaywebservice.com/HolidayService_v2/HolidayService2.asmx</locationURI>
                        </com.mirth.connect.connectors.ws.DefinitionServiceMap_-PortInformation>
                      </entry>
                    </map>
                  </com.mirth.connect.connectors.ws.DefinitionServiceMap_-DefinitionPortMap>
                </entry>
              </map>
            </wsdlDefinitionMap>
          </properties>
          <transformer version="3.5.2">
            <elements/>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.2">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
                <name>Xml to Json Resource</name>
                <sequenceNumber>0</sequenceNumber>
                <script>//static values
	tmp[&apos;status&apos;] = &quot;success&quot;;
	tmp[&apos;code&apos;] = 200;
	tmp[&apos;message&apos;] = &quot;Ok&quot;;
//

//dynamic values
	tmp[&apos;resource&apos;] = $(&apos;singularResourceName&apos;);

	tmp[&apos;total&apos;] = msg.*::[&apos;Body&apos;].*::[&apos;Get&apos; + $(&apos;pluralResourceName&apos;) + &apos;AvailableResponse&apos;].*::[&apos;Get&apos; + $(&apos;pluralResourceName&apos;) + &apos;AvailableResult&apos;].*::[$(&apos;singularResourceName&apos;) + &apos;Code&apos;].length();
	
	tmp[&apos;total&apos;] = msg.*::[&apos;Body&apos;].*::[&apos;Get&apos; + $(&apos;pluralResourceName&apos;) + &apos;AvailableResponse&apos;].*::[&apos;Get&apos; + $(&apos;pluralResourceName&apos;) + &apos;AvailableResult&apos;].*::[$(&apos;singularResourceName&apos;) + &apos;Code&apos;].length();

	//collection
	if (tmp[&apos;total&apos;] &gt; 0)
	{
		tmp[&apos;data&apos;] = [];
	
		for (var i = 0; i &lt; msg.*::[&apos;Body&apos;].*::[&apos;Get&apos; + $(&apos;pluralResourceName&apos;) + &apos;AvailableResponse&apos;].*::[&apos;Get&apos; + $(&apos;pluralResourceName&apos;) +&apos;AvailableResult&apos;].*::[$(&apos;singularResourceName&apos;) + &apos;Code&apos;].length(); i++)
		{
			tmp[&apos;data&apos;][i] = {};
			tmp[&apos;data&apos;][i][&apos;code&apos;] = msg.*::[&apos;Body&apos;].*::[&apos;Get&apos; + $(&apos;pluralResourceName&apos;) + &apos;AvailableResponse&apos;].*::[&apos;Get&apos; + $(&apos;pluralResourceName&apos;) + &apos;AvailableResult&apos;].*::[$(&apos;singularResourceName&apos;) + &apos;Code&apos;][i].*::[&apos;Code&apos;].toString();
			tmp[&apos;data&apos;][i][&apos;description&apos;] = msg.*::[&apos;Body&apos;].*::[&apos;Get&apos; + $(&apos;pluralResourceName&apos;) + &apos;AvailableResponse&apos;].*::[&apos;Get&apos; + $(&apos;pluralResourceName&apos;) + &apos;AvailableResult&apos;].*::[$(&apos;singularResourceName&apos;) + &apos;Code&apos;][i].*::[&apos;Description&apos;].toString();

			for (var index in $(&apos;extraRequest&apos;))
			{
				for (var key in $(&apos;extraRequest&apos;)[index])
				{
					tmp[&apos;data&apos;][i][key] = $(&apos;extraRequest&apos;)[index][key];
				}
			}
		}
	}
	else
	{
		tmp[&apos;data&apos;] = {};

		tmp[&apos;total&apos;]++;

		tmp[&apos;data&apos;][&apos;code&apos;] = String($(&apos;uriFragment4&apos;));

		tmp[&apos;data&apos;][&apos;date&apos;] = msg.*::[&apos;Body&apos;].*::[&apos;GetHolidayDateResponse&apos;].*::[&apos;GetHolidayDateResult&apos;].toString();
	
		for (var index in $(&apos;extraRequest&apos;))
		{
			for (var key in $(&apos;extraRequest&apos;)[index][&apos;result&apos;])
			{
				tmp[&apos;data&apos;][key] = $(&apos;extraRequest&apos;)[index][&apos;result&apos;][key];
			}
		}
	}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHNvYXA6RW52ZWxvcGUgeG1s
bnM6c29hcD0iaHR0cDovL3d3dy53My5vcmcvMjAwMy8wNS9zb2FwLWVudmVsb3BlIiB4bWxuczp4
c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4bWxuczp4c2Q9
Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIj4KICAgIDxzb2FwOkJvZHk+CiAgICAg
ICAgPEdldEhvbGlkYXlzQXZhaWxhYmxlUmVzcG9uc2UgeG1sbnM9Imh0dHA6Ly93d3cuaG9saWRh
eXdlYnNlcnZpY2UuY29tL0hvbGlkYXlTZXJ2aWNlX3YyLyI+CiAgICAgICAgICAgIDxHZXRIb2xp
ZGF5c0F2YWlsYWJsZVJlc3VsdD4KICAgICAgICAgICAgICAgIDxIb2xpZGF5Q29kZT4KICAgICAg
ICAgICAgICAgICAgICA8Q29kZT5ORVctWUVBUlMtREFZLUFDVFVBTDwvQ29kZT4KICAgICAgICAg
ICAgICAgICAgICA8RGVzY3JpcHRpb24+TmV3IFllYXIncyBEYXk8L0Rlc2NyaXB0aW9uPgogICAg
ICAgICAgICAgICAgPC9Ib2xpZGF5Q29kZT4KICAgICAgICAgICAgICAgIDxIb2xpZGF5Q29kZT4K
ICAgICAgICAgICAgICAgICAgICA8Q29kZT5ORVctWUVBUlMtREFZLU9CU0VSVkVEPC9Db2RlPgog
ICAgICAgICAgICAgICAgICAgIDxEZXNjcmlwdGlvbj5OZXcgWWVhcidzIERheTwvRGVzY3JpcHRp
b24+CiAgICAgICAgICAgICAgICA8L0hvbGlkYXlDb2RlPgogICAgICAgICAgICAgICAgPEhvbGlk
YXlDb2RlPgogICAgICAgICAgICAgICAgICAgIDxDb2RlPkRBWS1BRlRFUi1ORVctWUVBUlMtREFZ
PC9Db2RlPgogICAgICAgICAgICAgICAgICAgIDxEZXNjcmlwdGlvbj5EYXkgQWZ0ZXIgTmV3IFll
YXIncyBEYXkgKFFDKTwvRGVzY3JpcHRpb24+CiAgICAgICAgICAgICAgICA8L0hvbGlkYXlDb2Rl
PgogICAgICAgICAgICAgICAgPEhvbGlkYXlDb2RlPgogICAgICAgICAgICAgICAgICAgIDxDb2Rl
PkVQSVBIQU5ZPC9Db2RlPgogICAgICAgICAgICAgICAgICAgIDxEZXNjcmlwdGlvbj5FcGlwaGFu
eTwvRGVzY3JpcHRpb24+CiAgICAgICAgICAgICAgICA8L0hvbGlkYXlDb2RlPgogICAgICAgICAg
ICAgICAgPEhvbGlkYXlDb2RlPgogICAgICAgICAgICAgICAgICAgIDxDb2RlPlFVRUJFQy1GTEFH
LURBWTwvQ29kZT4KICAgICAgICAgICAgICAgICAgICA8RGVzY3JpcHRpb24+UXVlYmVjIEZsYWcg
RGF5PC9EZXNjcmlwdGlvbj4KICAgICAgICAgICAgICAgIDwvSG9saWRheUNvZGU+CiAgICAgICAg
ICAgICAgICA8SG9saWRheUNvZGU+CiAgICAgICAgICAgICAgICAgICAgPENvZGU+R1JPVU5ESE9H
LURBWTwvQ29kZT4KICAgICAgICAgICAgICAgICAgICA8RGVzY3JpcHRpb24+R3JvdW5kaG9nIERh
eTwvRGVzY3JpcHRpb24+CiAgICAgICAgICAgICAgICA8L0hvbGlkYXlDb2RlPgogICAgICAgICAg
ICAgICAgPEhvbGlkYXlDb2RlPgogICAgICAgICAgICAgICAgICAgIDxDb2RlPlZBTEVOVElORVMt
REFZPC9Db2RlPgogICAgICAgICAgICAgICAgICAgIDxEZXNjcmlwdGlvbj5WYWxlbnRpbmUncyBE
YXk8L0Rlc2NyaXB0aW9uPgogICAgICAgICAgICAgICAgPC9Ib2xpZGF5Q29kZT4KICAgICAgICAg
ICAgICAgIDxIb2xpZGF5Q29kZT4KICAgICAgICAgICAgICAgICAgICA8Q29kZT5GTEFHLURBWTwv
Q29kZT4KICAgICAgICAgICAgICAgICAgICA8RGVzY3JpcHRpb24+RmxhZyBEYXk8L0Rlc2NyaXB0
aW9uPgogICAgICAgICAgICAgICAgPC9Ib2xpZGF5Q29kZT4KICAgICAgICAgICAgICAgIDxIb2xp
ZGF5Q29kZT4KICAgICAgICAgICAgICAgICAgICA8Q29kZT5JU0xBTkRFUi1EQVk8L0NvZGU+CiAg
ICAgICAgICAgICAgICAgICAgPERlc2NyaXB0aW9uPklzbGFuZGVyIERheSAoUEUpPC9EZXNjcmlw
dGlvbj4KICAgICAgICAgICAgICAgIDwvSG9saWRheUNvZGU+CiAgICAgICAgICAgICAgICA8SG9s
aWRheUNvZGU+CiAgICAgICAgICAgICAgICAgICAgPENvZGU+SEVSSVRBR0UtREFZLVlUPC9Db2Rl
PgogICAgICAgICAgICAgICAgICAgIDxEZXNjcmlwdGlvbj5IZXJpdGFnZSBEYXkgKFlUKTwvRGVz
Y3JpcHRpb24+CiAgICAgICAgICAgICAgICA8L0hvbGlkYXlDb2RlPgogICAgICAgICAgICAgICAg
PEhvbGlkYXlDb2RlPgogICAgICAgICAgICAgICAgICAgIDxDb2RlPkxPVUlTLVJJRUwtREFZPC9D
b2RlPgogICAgICAgICAgICAgICAgICAgIDxEZXNjcmlwdGlvbj5Mb3VpcyBSaWVsIERheSAoTUIp
PC9EZXNjcmlwdGlvbj4KICAgICAgICAgICAgICAgIDwvSG9saWRheUNvZGU+CiAgICAgICAgICAg
ICAgICA8SG9saWRheUNvZGU+CiAgICAgICAgICAgICAgICAgICAgPENvZGU+RkFNSUxZLURBWTwv
Q29kZT4KICAgICAgICAgICAgICAgICAgICA8RGVzY3JpcHRpb24+RmFtaWx5IERheSAoQUIsIE9O
LCBTSyk8L0Rlc2NyaXB0aW9uPgogICAgICAgICAgICAgICAgPC9Ib2xpZGF5Q29kZT4KICAgICAg
ICAgICAgICAgIDxIb2xpZGF5Q29kZT4KICAgICAgICAgICAgICAgICAgICA8Q29kZT5TVC1QQVRS
SUNLUy1EQVktQUNUVUFMPC9Db2RlPgogICAgICAgICAgICAgICAgICAgIDxEZXNjcmlwdGlvbj5T
dC4gUGF0cmljaydzIERheTwvRGVzY3JpcHRpb24+CiAgICAgICAgICAgICAgICA8L0hvbGlkYXlD
b2RlPgogICAgICAgICAgICAgICAgPEhvbGlkYXlDb2RlPgogICAgICAgICAgICAgICAgICAgIDxD
b2RlPlNULVBBVFJJQ0tTLURBWS1PQlNFUlZFRDwvQ29kZT4KICAgICAgICAgICAgICAgICAgICA8
RGVzY3JpcHRpb24+U3QuIFBhdHJpY2sncyBEYXkgKE5MKTwvRGVzY3JpcHRpb24+CiAgICAgICAg
ICAgICAgICA8L0hvbGlkYXlDb2RlPgogICAgICAgICAgICAgICAgPEhvbGlkYXlDb2RlPgogICAg
ICAgICAgICAgICAgICAgIDxDb2RlPkNPTU1PTldFQUxUSC1EQVk8L0NvZGU+CiAgICAgICAgICAg
ICAgICAgICAgPERlc2NyaXB0aW9uPkNvbW1vbndlYWx0aCBEYXk8L0Rlc2NyaXB0aW9uPgogICAg
ICAgICAgICAgICAgPC9Ib2xpZGF5Q29kZT4KICAgICAgICAgICAgICAgIDxIb2xpZGF5Q29kZT4K
ICAgICAgICAgICAgICAgICAgICA8Q29kZT5FQVNURVItQUNUVUFMPC9Db2RlPgogICAgICAgICAg
ICAgICAgICAgIDxEZXNjcmlwdGlvbj5FYXN0ZXIgU3VuZGF5PC9EZXNjcmlwdGlvbj4KICAgICAg
ICAgICAgICAgIDwvSG9saWRheUNvZGU+CiAgICAgICAgICAgICAgICA8SG9saWRheUNvZGU+CiAg
ICAgICAgICAgICAgICAgICAgPENvZGU+RUFTVEVSLU9CU0VSVkVEPC9Db2RlPgogICAgICAgICAg
ICAgICAgICAgIDxEZXNjcmlwdGlvbj5FYXN0ZXIgTW9uZGF5PC9EZXNjcmlwdGlvbj4KICAgICAg
ICAgICAgICAgIDwvSG9saWRheUNvZGU+CiAgICAgICAgICAgICAgICA8SG9saWRheUNvZGU+CiAg
ICAgICAgICAgICAgICAgICAgPENvZGU+R09PRC1GUklEQVk8L0NvZGU+CiAgICAgICAgICAgICAg
ICAgICAgPERlc2NyaXB0aW9uPkdvb2QgRnJpZGF5PC9EZXNjcmlwdGlvbj4KICAgICAgICAgICAg
ICAgIDwvSG9saWRheUNvZGU+CiAgICAgICAgICAgICAgICA8SG9saWRheUNvZGU+CiAgICAgICAg
ICAgICAgICAgICAgPENvZGU+U0hST1ZFLVRVRVNEQVk8L0NvZGU+CiAgICAgICAgICAgICAgICAg
ICAgPERlc2NyaXB0aW9uPlNocm92ZSBUdWVzZGF5IChQYW5jYWtlIERheSk8L0Rlc2NyaXB0aW9u
PgogICAgICAgICAgICAgICAgPC9Ib2xpZGF5Q29kZT4KICAgICAgICAgICAgICAgIDxIb2xpZGF5
Q29kZT4KICAgICAgICAgICAgICAgICAgICA8Q29kZT5BU0gtV0VETkVTREFZPC9Db2RlPgogICAg
ICAgICAgICAgICAgICAgIDxEZXNjcmlwdGlvbj5Bc2ggV2VkbmVzZGF5PC9EZXNjcmlwdGlvbj4K
ICAgICAgICAgICAgICAgIDwvSG9saWRheUNvZGU+CiAgICAgICAgICAgICAgICA8SG9saWRheUNv
ZGU+CiAgICAgICAgICAgICAgICAgICAgPENvZGU+UEFMTS1TVU5EQVk8L0NvZGU+CiAgICAgICAg
ICAgICAgICAgICAgPERlc2NyaXB0aW9uPlBhbG0gU3VuZGF5PC9EZXNjcmlwdGlvbj4KICAgICAg
ICAgICAgICAgIDwvSG9saWRheUNvZGU+CiAgICAgICAgICAgICAgICA8SG9saWRheUNvZGU+CiAg
ICAgICAgICAgICAgICAgICAgPENvZGU+TUFVTkRZLVRIVVJTREFZPC9Db2RlPgogICAgICAgICAg
ICAgICAgICAgIDxEZXNjcmlwdGlvbj5NYXVuZHkgVGh1cnNkYXk8L0Rlc2NyaXB0aW9uPgogICAg
ICAgICAgICAgICAgPC9Ib2xpZGF5Q29kZT4KICAgICAgICAgICAgICAgIDxIb2xpZGF5Q29kZT4K
ICAgICAgICAgICAgICAgICAgICA8Q29kZT5WSU1ZLVJJREdFLURBWTwvQ29kZT4KICAgICAgICAg
ICAgICAgICAgICA8RGVzY3JpcHRpb24+VmlteSBSaWRnZSBEYXk8L0Rlc2NyaXB0aW9uPgogICAg
ICAgICAgICAgICAgPC9Ib2xpZGF5Q29kZT4KICAgICAgICAgICAgICAgIDxIb2xpZGF5Q29kZT4K
ICAgICAgICAgICAgICAgICAgICA8Q29kZT5WSUNUT1JJQS1EQVk8L0NvZGU+CiAgICAgICAgICAg
ICAgICAgICAgPERlc2NyaXB0aW9uPlZpY3RvcmlhIERheTwvRGVzY3JpcHRpb24+CiAgICAgICAg
ICAgICAgICA8L0hvbGlkYXlDb2RlPgogICAgICAgICAgICAgICAgPEhvbGlkYXlDb2RlPgogICAg
ICAgICAgICAgICAgICAgIDxDb2RlPk5BVElPTkFMLVBBVFJJT1RFUy1EQVk8L0NvZGU+CiAgICAg
ICAgICAgICAgICAgICAgPERlc2NyaXB0aW9uPk5hdGlvbmFsIFBhdHJpb3RlcyBEYXkgKFFDKTwv
RGVzY3JpcHRpb24+CiAgICAgICAgICAgICAgICA8L0hvbGlkYXlDb2RlPgogICAgICAgICAgICAg
ICAgPEhvbGlkYXlDb2RlPgogICAgICAgICAgICAgICAgICAgIDxDb2RlPk5BVElPTkFMLUFCT1JJ
R0lOQUwtREFZLUFDVFVBTDwvQ29kZT4KICAgICAgICAgICAgICAgICAgICA8RGVzY3JpcHRpb24+
TmF0aW9uYWwgQWJvcmlnaW5hbCBEYXkgKE5UKTwvRGVzY3JpcHRpb24+CiAgICAgICAgICAgICAg
ICA8L0hvbGlkYXlDb2RlPgogICAgICAgICAgICAgICAgPEhvbGlkYXlDb2RlPgogICAgICAgICAg
ICAgICAgICAgIDxDb2RlPk5BVElPTkFMLUFCT1JJR0lOQUwtREFZLU9CU0VSVkVEPC9Db2RlPgog
ICAgICAgICAgICAgICAgICAgIDxEZXNjcmlwdGlvbj5OYXRpb25hbCBBYm9yaWdpbmFsIERheSAo
TlQpPC9EZXNjcmlwdGlvbj4KICAgICAgICAgICAgICAgIDwvSG9saWRheUNvZGU+CiAgICAgICAg
ICAgICAgICA8SG9saWRheUNvZGU+CiAgICAgICAgICAgICAgICAgICAgPENvZGU+TkFUSU9OQUwt
REFZLUFDVFVBTDwvQ29kZT4KICAgICAgICAgICAgICAgICAgICA8RGVzY3JpcHRpb24+TmF0aW9u
YWwgRGF5IChRQyk8L0Rlc2NyaXB0aW9uPgogICAgICAgICAgICAgICAgPC9Ib2xpZGF5Q29kZT4K
ICAgICAgICAgICAgICAgIDxIb2xpZGF5Q29kZT4KICAgICAgICAgICAgICAgICAgICA8Q29kZT5O
QVRJT05BTC1EQVktT0JTRVJWRUQ8L0NvZGU+CiAgICAgICAgICAgICAgICAgICAgPERlc2NyaXB0
aW9uPk5hdGlvbmFsIERheSAoUUMpPC9EZXNjcmlwdGlvbj4KICAgICAgICAgICAgICAgIDwvSG9s
aWRheUNvZGU+CiAgICAgICAgICAgICAgICA8SG9saWRheUNvZGU+CiAgICAgICAgICAgICAgICAg
ICAgPENvZGU+Q0FOQURBLURBWS1BQ1RVQUw8L0NvZGU+CiAgICAgICAgICAgICAgICAgICAgPERl
c2NyaXB0aW9uPkNhbmFkYSBEYXk8L0Rlc2NyaXB0aW9uPgogICAgICAgICAgICAgICAgPC9Ib2xp
ZGF5Q29kZT4KICAgICAgICAgICAgICAgIDxIb2xpZGF5Q29kZT4KICAgICAgICAgICAgICAgICAg
ICA8Q29kZT5DQU5BREEtREFZLU9CU0VSVkVEPC9Db2RlPgogICAgICAgICAgICAgICAgICAgIDxE
ZXNjcmlwdGlvbj5DYW5hZGEgRGF5PC9EZXNjcmlwdGlvbj4KICAgICAgICAgICAgICAgIDwvSG9s
aWRheUNvZGU+CiAgICAgICAgICAgICAgICA8SG9saWRheUNvZGU+CiAgICAgICAgICAgICAgICAg
ICAgPENvZGU+TlVOQVZVVC1EQVktQUNUVUFMPC9Db2RlPgogICAgICAgICAgICAgICAgICAgIDxE
ZXNjcmlwdGlvbj5OdW5hdnV0IERheTwvRGVzY3JpcHRpb24+CiAgICAgICAgICAgICAgICA8L0hv
bGlkYXlDb2RlPgogICAgICAgICAgICAgICAgPEhvbGlkYXlDb2RlPgogICAgICAgICAgICAgICAg
ICAgIDxDb2RlPk5VTkFWVVQtREFZLU9CU0VSVkVEPC9Db2RlPgogICAgICAgICAgICAgICAgICAg
IDxEZXNjcmlwdGlvbj5OdW5hdnV0IERheTwvRGVzY3JpcHRpb24+CiAgICAgICAgICAgICAgICA8
L0hvbGlkYXlDb2RlPgogICAgICAgICAgICAgICAgPEhvbGlkYXlDb2RlPgogICAgICAgICAgICAg
ICAgICAgIDxDb2RlPkJSSVRJU0gtQ09MVU1CSUEtREFZPC9Db2RlPgogICAgICAgICAgICAgICAg
ICAgIDxEZXNjcmlwdGlvbj5Ccml0aXNoIENvbHVtYmlhIERheSAoQkMpPC9EZXNjcmlwdGlvbj4K
ICAgICAgICAgICAgICAgIDwvSG9saWRheUNvZGU+CiAgICAgICAgICAgICAgICA8SG9saWRheUNv
ZGU+CiAgICAgICAgICAgICAgICAgICAgPENvZGU+SEVSSVRBR0UtREFZLUFCPC9Db2RlPgogICAg
ICAgICAgICAgICAgICAgIDxEZXNjcmlwdGlvbj5IZXJpdGFnZSBEYXkgKEFCKTwvRGVzY3JpcHRp
b24+CiAgICAgICAgICAgICAgICA8L0hvbGlkYXlDb2RlPgogICAgICAgICAgICAgICAgPEhvbGlk
YXlDb2RlPgogICAgICAgICAgICAgICAgICAgIDxDb2RlPkNJVklDLUhPTElEQVk8L0NvZGU+CiAg
ICAgICAgICAgICAgICAgICAgPERlc2NyaXB0aW9uPkNpdmljIEhvbGlkYXkgKE1CLCBOVCwgT04s
IFNLKTwvRGVzY3JpcHRpb24+CiAgICAgICAgICAgICAgICA8L0hvbGlkYXlDb2RlPgogICAgICAg
ICAgICAgICAgPEhvbGlkYXlDb2RlPgogICAgICAgICAgICAgICAgICAgIDxDb2RlPk5FVy1CUlVO
U1dJQ0stREFZPC9Db2RlPgogICAgICAgICAgICAgICAgICAgIDxEZXNjcmlwdGlvbj5OZXcgQnJ1
bnN3aWNrIERheSAoTkIpPC9EZXNjcmlwdGlvbj4KICAgICAgICAgICAgICAgIDwvSG9saWRheUNv
ZGU+CiAgICAgICAgICAgICAgICA8SG9saWRheUNvZGU+CiAgICAgICAgICAgICAgICAgICAgPENv
ZGU+R09MRC1DVVAtUEFSQURFLURBWTwvQ29kZT4KICAgICAgICAgICAgICAgICAgICA8RGVzY3Jp
cHRpb24+R29sZCBDdXAgUGFyYWRlIChQRSk8L0Rlc2NyaXB0aW9uPgogICAgICAgICAgICAgICAg
PC9Ib2xpZGF5Q29kZT4KICAgICAgICAgICAgICAgIDxIb2xpZGF5Q29kZT4KICAgICAgICAgICAg
ICAgICAgICA8Q29kZT5MQUJPVVItREFZPC9Db2RlPgogICAgICAgICAgICAgICAgICAgIDxEZXNj
cmlwdGlvbj5MYWJvdXIgRGF5PC9EZXNjcmlwdGlvbj4KICAgICAgICAgICAgICAgIDwvSG9saWRh
eUNvZGU+CiAgICAgICAgICAgICAgICA8SG9saWRheUNvZGU+CiAgICAgICAgICAgICAgICAgICAg
PENvZGU+VEhBTktTR0lWSU5HLURBWTwvQ29kZT4KICAgICAgICAgICAgICAgICAgICA8RGVzY3Jp
cHRpb24+VGhhbmtzZ2l2aW5nIERheTwvRGVzY3JpcHRpb24+CiAgICAgICAgICAgICAgICA8L0hv
bGlkYXlDb2RlPgogICAgICAgICAgICAgICAgPEhvbGlkYXlDb2RlPgogICAgICAgICAgICAgICAg
ICAgIDxDb2RlPkhBTExPV0VFTjwvQ29kZT4KICAgICAgICAgICAgICAgICAgICA8RGVzY3JpcHRp
b24+SGFsbG93ZWVuPC9EZXNjcmlwdGlvbj4KICAgICAgICAgICAgICAgIDwvSG9saWRheUNvZGU+
CiAgICAgICAgICAgICAgICA8SG9saWRheUNvZGU+CiAgICAgICAgICAgICAgICAgICAgPENvZGU+
UkVNRU1CRVJBTkNFLURBWS1BQ1RVQUw8L0NvZGU+CiAgICAgICAgICAgICAgICAgICAgPERlc2Ny
aXB0aW9uPlJlbWVtYmVyYW5jZSBEYXk8L0Rlc2NyaXB0aW9uPgogICAgICAgICAgICAgICAgPC9I
b2xpZGF5Q29kZT4KICAgICAgICAgICAgICAgIDxIb2xpZGF5Q29kZT4KICAgICAgICAgICAgICAg
ICAgICA8Q29kZT5SRU1FTUJFUkFOQ0UtREFZLU9CU0VSVkVEPC9Db2RlPgogICAgICAgICAgICAg
ICAgICAgIDxEZXNjcmlwdGlvbj5SZW1lbWJlcmFuY2UgRGF5PC9EZXNjcmlwdGlvbj4KICAgICAg
ICAgICAgICAgIDwvSG9saWRheUNvZGU+CiAgICAgICAgICAgICAgICA8SG9saWRheUNvZGU+CiAg
ICAgICAgICAgICAgICAgICAgPENvZGU+Q0hSSVNUTUFTLUFDVFVBTDwvQ29kZT4KICAgICAgICAg
ICAgICAgICAgICA8RGVzY3JpcHRpb24+Q2hyaXN0bWFzPC9EZXNjcmlwdGlvbj4KICAgICAgICAg
ICAgICAgIDwvSG9saWRheUNvZGU+CiAgICAgICAgICAgICAgICA8SG9saWRheUNvZGU+CiAgICAg
ICAgICAgICAgICAgICAgPENvZGU+Q0hSSVNUTUFTLU9CU0VSVkVEPC9Db2RlPgogICAgICAgICAg
ICAgICAgICAgIDxEZXNjcmlwdGlvbj5DaHJpc3RtYXM8L0Rlc2NyaXB0aW9uPgogICAgICAgICAg
ICAgICAgPC9Ib2xpZGF5Q29kZT4KICAgICAgICAgICAgICAgIDxIb2xpZGF5Q29kZT4KICAgICAg
ICAgICAgICAgICAgICA8Q29kZT5CT1hJTkctREFZLUFDVFVBTDwvQ29kZT4KICAgICAgICAgICAg
ICAgICAgICA8RGVzY3JpcHRpb24+Qm94aW5nIERheTwvRGVzY3JpcHRpb24+CiAgICAgICAgICAg
ICAgICA8L0hvbGlkYXlDb2RlPgogICAgICAgICAgICAgICAgPEhvbGlkYXlDb2RlPgogICAgICAg
ICAgICAgICAgICAgIDxDb2RlPkJPWElORy1EQVktT0JTRVJWRUQ8L0NvZGU+CiAgICAgICAgICAg
ICAgICAgICAgPERlc2NyaXB0aW9uPkJveGluZyBEYXk8L0Rlc2NyaXB0aW9uPgogICAgICAgICAg
ICAgICAgPC9Ib2xpZGF5Q29kZT4KICAgICAgICAgICAgICAgIDxIb2xpZGF5Q29kZT4KICAgICAg
ICAgICAgICAgICAgICA8Q29kZT5ORVctWUVBUlMtRVZFPC9Db2RlPgogICAgICAgICAgICAgICAg
ICAgIDxEZXNjcmlwdGlvbj5OZXcgWWVhcidzIEV2ZTwvRGVzY3JpcHRpb24+CiAgICAgICAgICAg
ICAgICA8L0hvbGlkYXlDb2RlPgogICAgICAgICAgICA8L0dldEhvbGlkYXlzQXZhaWxhYmxlUmVz
dWx0PgogICAgICAgIDwvR2V0SG9saWRheXNBdmFpbGFibGVSZXNwb25zZT4KICAgIDwvc29hcDpC
b2R5Pgo8L3NvYXA6RW52ZWxvcGU+</inboundTemplate>
            <outboundTemplate encoding="base64">e30=</outboundTemplate>
            <inboundDataType>XML</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.2">
                <stripNamespaces>false</stripNamespaces>
              </serializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.2">
                <splitType>Element_Name</splitType>
                <elementName></elementName>
                <level>1</level>
                <query></query>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.2">
            <elements/>
          </filter>
          <transportName>Web Service Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.5.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.5.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <exportData>
        <metadata>
          <enabled>true</enabled>
          <lastModified>
            <time>1526328520569</time>
            <timezone>America/Santiago</timezone>
          </lastModified>
          <pruningSettings>
            <archiveEnabled>true</archiveEnabled>
          </pruningSettings>
        </metadata>
      </exportData>
    </channel>
    <channel version="3.5.2">
      <id>bcd252d7-2eac-41f8-9220-4d52ef361d13</id>
      <nextMetaDataId>22</nextMetaDataId>
      <name>Nucleus</name>
      <description></description>
      <revision>425</revision>
      <sourceConnector version="3.5.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.http.HttpReceiverProperties" version="3.5.2">
          <pluginProperties>
            <com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties version="3.5.2">
  <authType>NONE</authType>
            </com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties>
          </pluginProperties>
          <listenerConnectorProperties version="3.5.2">
            <host>0.0.0.0</host>
            <port>10000</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.5.2">
            <responseVariable>d18</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <xmlBody>true</xmlBody>
          <parseMultipart>true</parseMultipart>
          <includeMetadata>true</includeMetadata>
          <binaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</binaryMimeTypes>
          <binaryMimeTypesRegex>true</binaryMimeTypesRegex>
          <responseContentType>application/json</responseContentType>
          <responseDataTypeBinary>false</responseDataTypeBinary>
          <responseStatusCode>200</responseStatusCode>
          <responseHeaders class="linked-hash-map"/>
          <charset>DEFAULT_ENCODING</charset>
          <contextPath></contextPath>
          <timeout>0</timeout>
          <staticResources/>
        </properties>
        <transformer version="3.5.2">
          <elements>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>Url</name>
              <sequenceNumber>0</sequenceNumber>
              <variable>Url</variable>
              <mapping>sourceMap.get(&apos;contextPath&apos;)</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>GLOBAL_CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>Http Method</name>
              <sequenceNumber>1</sequenceNumber>
              <variable>Http Method</variable>
              <mapping>sourceMap.get(&apos;method&apos;).toLowerCase()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.messagebuilder.MessageBuilderStep>
              <sequenceNumber>2</sequenceNumber>
              <messageSegment>tmp</messageSegment>
              <mapping>parseXmlParametersToObject(msg[&apos;Parameters&apos;].toString())</mapping>
              <defaultValue></defaultValue>
              <replacements/>
            </com.mirth.connect.plugins.messagebuilder.MessageBuilderStep>
          </elements>
          <inboundTemplate encoding="base64">PEh0dHBSZXF1ZXN0Pg0KICAgIDxSZW1vdGVBZGRyZXNzPjA6MDowOjA6MDowOjA6MTwvUmVtb3Rl
QWRkcmVzcz4NCiAgICA8UmVxdWVzdFVybD5odHRwOi8vbG9jYWxob3N0OjEwMDAwL2FwaS91c2Vy
czwvUmVxdWVzdFVybD4NCiAgICA8TWV0aG9kPlBPU1Q8L01ldGhvZD4NCiAgICA8UmVxdWVzdFBh
dGgvPg0KICAgIDxSZXF1ZXN0Q29udGV4dFBhdGg+L2FwaS91c2VyczwvUmVxdWVzdENvbnRleHRQ
YXRoPg0KICAgIDxQYXJhbWV0ZXJzPg0KICAgICAgICA8bmFtZT5wZXBlPC9uYW1lPg0KICAgICAg
ICA8bGFzdF9uYW1lPnRvcnJlczwvbGFzdF9uYW1lPg0KICAgICAgICA8ZW1haWw+cWRxZEBnbWFp
bC5jb208L2VtYWlsPg0KICAgICAgICA8c3RhdHVzPjE8L3N0YXR1cz4NCiAgICA8L1BhcmFtZXRl
cnM+DQogICAgPEhlYWRlcj4NCiAgICAgICAgPENhY2hlLUNvbnRyb2w+bm8tY2FjaGU8L0NhY2hl
LUNvbnRyb2w+DQogICAgICAgIDxBY2NlcHQ+Ki8qPC9BY2NlcHQ+DQogICAgICAgIDxVc2VyLUFn
ZW50PlBvc3RtYW5SdW50aW1lLzcuMS4xPC9Vc2VyLUFnZW50Pg0KICAgICAgICA8Q29ubmVjdGlv
bj5rZWVwLWFsaXZlPC9Db25uZWN0aW9uPg0KICAgICAgICA8UG9zdG1hbi1Ub2tlbj5lNWM3OTkz
Ny01MjY0LTQyMGUtYjRhZi00Y2RmNzdlMTY0NjU8L1Bvc3RtYW4tVG9rZW4+DQogICAgICAgIDxI
b3N0PmxvY2FsaG9zdDoxMDAwMDwvSG9zdD4NCiAgICAgICAgPEFjY2VwdC1FbmNvZGluZz5nemlw
LCBkZWZsYXRlPC9BY2NlcHQtRW5jb2Rpbmc+DQogICAgICAgIDxDb250ZW50LUxlbmd0aD41ODwv
Q29udGVudC1MZW5ndGg+DQogICAgICAgIDxDb250ZW50LVR5cGU+YXBwbGljYXRpb24veC13d3ct
Zm9ybS11cmxlbmNvZGVkPC9Db250ZW50LVR5cGU+DQogICAgPC9IZWFkZXI+DQogICAgPENvbnRl
bnQgZW5jb2Rpbmc9IkJhc2U2NCIgbXVsdGlwYXJ0PSJubyIvPg0KPC9IdHRwUmVxdWVzdD4NCg==
</inboundTemplate>
          <outboundTemplate encoding="base64">e30=</outboundTemplate>
          <inboundDataType>XML</inboundDataType>
          <outboundDataType>JSON</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.2">
              <stripNamespaces>true</stripNamespaces>
            </serializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.2">
              <splitType>Element_Name</splitType>
              <elementName></elementName>
              <level>1</level>
              <query></query>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
            <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
              <splitType>JavaScript</splitType>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.5.2">
          <elements/>
        </filter>
        <transportName>HTTP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.5.2">
          <metaDataId>10</metaDataId>
          <name>Http Get</name>
          <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.5.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <host>http://54.210.72.106:81${Url}</host>
            <useProxyServer>false</useProxyServer>
            <proxyAddress></proxyAddress>
            <proxyPort></proxyPort>
            <method>get</method>
            <headers class="linked-hash-map"/>
            <parameters class="linked-hash-map"/>
            <responseXmlBody>true</responseXmlBody>
            <responseParseMultipart>true</responseParseMultipart>
            <responseIncludeMetadata>false</responseIncludeMetadata>
            <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
            <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
            <multipart>false</multipart>
            <useAuthentication>false</useAuthentication>
            <authenticationType>Basic</authenticationType>
            <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
            <username></username>
            <password></password>
            <content></content>
            <contentType>text/plain</contentType>
            <dataTypeBinary>false</dataTypeBinary>
            <charset>UTF-8</charset>
            <socketTimeout>30000</socketTimeout>
          </properties>
          <transformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.2">
            <elements>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
                <name>Accept message if &quot;$(&apos;Http Method&apos;)&quot; equals &quot;get&quot;</name>
                <sequenceNumber>0</sequenceNumber>
                <field>$(&apos;Http Method&apos;)</field>
                <condition>EQUALS</condition>
                <values>
                  <string>&quot;get&quot;</string>
                </values>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>HTTP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.2">
          <metaDataId>11</metaDataId>
          <name>Http Post</name>
          <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.5.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <host>http://54.210.72.106:81${Url}</host>
            <useProxyServer>false</useProxyServer>
            <proxyAddress></proxyAddress>
            <proxyPort></proxyPort>
            <method>post</method>
            <headers class="linked-hash-map"/>
            <parameters class="linked-hash-map"/>
            <responseXmlBody>false</responseXmlBody>
            <responseParseMultipart>true</responseParseMultipart>
            <responseIncludeMetadata>false</responseIncludeMetadata>
            <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
            <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
            <multipart>false</multipart>
            <useAuthentication>false</useAuthentication>
            <authenticationType>Basic</authenticationType>
            <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
            <username></username>
            <password></password>
            <content>${message.encodedData}</content>
            <contentType>application/json</contentType>
            <dataTypeBinary>false</dataTypeBinary>
            <charset>UTF-8</charset>
            <socketTimeout>30000</socketTimeout>
          </properties>
          <transformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.2">
            <elements>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
                <name>Accept message if &quot;$(&apos;Http Method&apos;)&quot; equals &quot;post&quot;</name>
                <sequenceNumber>0</sequenceNumber>
                <field>$(&apos;Http Method&apos;)</field>
                <condition>EQUALS</condition>
                <values>
                  <string>&quot;post&quot;</string>
                </values>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>HTTP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.2">
          <metaDataId>20</metaDataId>
          <name>Http Delete</name>
          <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.5.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <host>http://54.210.72.106:81${Url}</host>
            <useProxyServer>false</useProxyServer>
            <proxyAddress></proxyAddress>
            <proxyPort></proxyPort>
            <method>delete</method>
            <headers class="linked-hash-map"/>
            <parameters class="linked-hash-map"/>
            <responseXmlBody>false</responseXmlBody>
            <responseParseMultipart>true</responseParseMultipart>
            <responseIncludeMetadata>false</responseIncludeMetadata>
            <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
            <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
            <multipart>false</multipart>
            <useAuthentication>false</useAuthentication>
            <authenticationType>Basic</authenticationType>
            <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
            <username></username>
            <password></password>
            <content></content>
            <contentType>text/plain</contentType>
            <dataTypeBinary>false</dataTypeBinary>
            <charset>UTF-8</charset>
            <socketTimeout>30000</socketTimeout>
          </properties>
          <transformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.2">
            <elements>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
                <name>Accept message if &quot;$(&apos;Http Method&apos;)&quot; equals &quot;delete&quot;</name>
                <sequenceNumber>0</sequenceNumber>
                <field>$(&apos;Http Method&apos;)</field>
                <condition>EQUALS</condition>
                <values>
                  <string>&quot;delete&quot;</string>
                </values>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>HTTP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.2">
          <metaDataId>21</metaDataId>
          <name>Http Put</name>
          <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.5.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <host>http://54.210.72.106:81${Url}</host>
            <useProxyServer>false</useProxyServer>
            <proxyAddress></proxyAddress>
            <proxyPort></proxyPort>
            <method>put</method>
            <headers class="linked-hash-map"/>
            <parameters class="linked-hash-map"/>
            <responseXmlBody>false</responseXmlBody>
            <responseParseMultipart>true</responseParseMultipart>
            <responseIncludeMetadata>false</responseIncludeMetadata>
            <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
            <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
            <multipart>false</multipart>
            <useAuthentication>false</useAuthentication>
            <authenticationType>Basic</authenticationType>
            <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
            <username></username>
            <password></password>
            <content>${message.encodedData}</content>
            <contentType>application/json</contentType>
            <dataTypeBinary>false</dataTypeBinary>
            <charset>UTF-8</charset>
            <socketTimeout>30000</socketTimeout>
          </properties>
          <transformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.2">
            <elements>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
                <name>Accept message if &quot;$(&apos;Http Method&apos;)&quot; equals &quot;put&quot;</name>
                <sequenceNumber>0</sequenceNumber>
                <field>$(&apos;Http Method&apos;)</field>
                <condition>EQUALS</condition>
                <values>
                  <string>&quot;put&quot;</string>
                </values>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>HTTP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.2">
          <metaDataId>18</metaDataId>
          <name>Return Final Result</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if ($(&apos;Http Method&apos;).equals(&quot;get&quot;)) {	
	
	return $(&apos;d10&apos;); // return Http Get Method response
		
} else if ($(&apos;Http Method&apos;).equals(&quot;post&quot;)) {
	
	return $(&apos;d11&apos;); // return Http Post Method response
	
} else if ($(&apos;Http Method&apos;).equals(&quot;delete&quot;)) {
	
	return $(&apos;d20&apos;); // return Http Delete Method response
	
} else if ($(&apos;Http Method&apos;).equals(&quot;put&quot;)) {
	
	return $(&apos;d21&apos;); // return Http Put Method response
	
}

/*function errorCheck($data) 
{
	$var = JSON.parse(&quot;&apos;&quot;+$data+&quot;&apos;&quot;);
	return $var;
	if ($var.status.equals(&quot;success&quot;)) {
		return JSON.parse($data);
	} else return $var
}*/
</script>
          </properties>
          <transformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.2">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.5.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.5.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <exportData>
        <metadata>
          <enabled>true</enabled>
        </metadata>
      </exportData>
    </channel>
    <channel version="3.5.2">
      <id>4588f2cb-5cd1-403a-81b2-f721ece6502c</id>
      <nextMetaDataId>24</nextMetaDataId>
      <name>Nucleus To FHIR</name>
      <description></description>
      <revision>135</revision>
      <sourceConnector version="3.5.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.http.HttpReceiverProperties" version="3.5.2">
          <pluginProperties>
            <com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties version="3.5.2">
  <authType>NONE</authType>
            </com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties>
          </pluginProperties>
          <listenerConnectorProperties version="3.5.2">
            <host>0.0.0.0</host>
            <port>10001</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.5.2">
            <responseVariable>d18</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <xmlBody>true</xmlBody>
          <parseMultipart>true</parseMultipart>
          <includeMetadata>true</includeMetadata>
          <binaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</binaryMimeTypes>
          <binaryMimeTypesRegex>true</binaryMimeTypesRegex>
          <responseContentType>application/json</responseContentType>
          <responseDataTypeBinary>false</responseDataTypeBinary>
          <responseStatusCode>200</responseStatusCode>
          <responseHeaders class="linked-hash-map"/>
          <charset>DEFAULT_ENCODING</charset>
          <contextPath></contextPath>
          <timeout>0</timeout>
          <staticResources/>
        </properties>
        <transformer version="3.5.2">
          <elements>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>Url</name>
              <sequenceNumber>0</sequenceNumber>
              <variable>Url</variable>
              <mapping>sourceMap.get(&apos;contextPath&apos;)</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>GLOBAL_CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>Http Method</name>
              <sequenceNumber>1</sequenceNumber>
              <variable>Http Method</variable>
              <mapping>sourceMap.get(&apos;method&apos;).toLowerCase()</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.mapper.MapperStep>
              <name>Channel Url</name>
              <sequenceNumber>2</sequenceNumber>
              <variable>Channel Url</variable>
              <mapping>&apos;http://localhost:10001&apos;</mapping>
              <defaultValue></defaultValue>
              <replacements/>
              <scope>CHANNEL</scope>
            </com.mirth.connect.plugins.mapper.MapperStep>
            <com.mirth.connect.plugins.messagebuilder.MessageBuilderStep>
              <name></name>
              <sequenceNumber>3</sequenceNumber>
              <messageSegment>tmp</messageSegment>
              <mapping>parseXmlParametersToObject(msg[&apos;Parameters&apos;].toString())</mapping>
              <defaultValue></defaultValue>
              <replacements/>
            </com.mirth.connect.plugins.messagebuilder.MessageBuilderStep>
          </elements>
          <inboundTemplate encoding="base64">PEh0dHBSZXF1ZXN0Pg0KICAgIDxSZW1vdGVBZGRyZXNzPjA6MDowOjA6MDowOjA6MTwvUmVtb3Rl
QWRkcmVzcz4NCiAgICA8UmVxdWVzdFVybD5odHRwOi8vbG9jYWxob3N0OjEwMDAwL2FwaS91c2Vy
czwvUmVxdWVzdFVybD4NCiAgICA8TWV0aG9kPlBPU1Q8L01ldGhvZD4NCiAgICA8UmVxdWVzdFBh
dGgvPg0KICAgIDxSZXF1ZXN0Q29udGV4dFBhdGg+L2FwaS91c2VyczwvUmVxdWVzdENvbnRleHRQ
YXRoPg0KICAgIDxQYXJhbWV0ZXJzPg0KICAgICAgICA8bmFtZT5wZXBlPC9uYW1lPg0KICAgICAg
ICA8bGFzdF9uYW1lPnRvcnJlczwvbGFzdF9uYW1lPg0KICAgICAgICA8ZW1haWw+cWRxZEBnbWFp
bC5jb208L2VtYWlsPg0KICAgICAgICA8c3RhdHVzPjE8L3N0YXR1cz4NCiAgICA8L1BhcmFtZXRl
cnM+DQogICAgPEhlYWRlcj4NCiAgICAgICAgPENhY2hlLUNvbnRyb2w+bm8tY2FjaGU8L0NhY2hl
LUNvbnRyb2w+DQogICAgICAgIDxBY2NlcHQ+Ki8qPC9BY2NlcHQ+DQogICAgICAgIDxVc2VyLUFn
ZW50PlBvc3RtYW5SdW50aW1lLzcuMS4xPC9Vc2VyLUFnZW50Pg0KICAgICAgICA8Q29ubmVjdGlv
bj5rZWVwLWFsaXZlPC9Db25uZWN0aW9uPg0KICAgICAgICA8UG9zdG1hbi1Ub2tlbj5lNWM3OTkz
Ny01MjY0LTQyMGUtYjRhZi00Y2RmNzdlMTY0NjU8L1Bvc3RtYW4tVG9rZW4+DQogICAgICAgIDxI
b3N0PmxvY2FsaG9zdDoxMDAwMDwvSG9zdD4NCiAgICAgICAgPEFjY2VwdC1FbmNvZGluZz5nemlw
LCBkZWZsYXRlPC9BY2NlcHQtRW5jb2Rpbmc+DQogICAgICAgIDxDb250ZW50LUxlbmd0aD41ODwv
Q29udGVudC1MZW5ndGg+DQogICAgICAgIDxDb250ZW50LVR5cGU+YXBwbGljYXRpb24veC13d3ct
Zm9ybS11cmxlbmNvZGVkPC9Db250ZW50LVR5cGU+DQogICAgPC9IZWFkZXI+DQogICAgPENvbnRl
bnQgZW5jb2Rpbmc9IkJhc2U2NCIgbXVsdGlwYXJ0PSJubyIvPg0KPC9IdHRwUmVxdWVzdD4NCg==
</inboundTemplate>
          <outboundTemplate encoding="base64">e30=</outboundTemplate>
          <inboundDataType>XML</inboundDataType>
          <outboundDataType>JSON</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.xml.XMLDataTypeProperties" version="3.5.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.xml.XMLSerializationProperties" version="3.5.2">
              <stripNamespaces>true</stripNamespaces>
            </serializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.xml.XMLBatchProperties" version="3.5.2">
              <splitType>Element_Name</splitType>
              <elementName></elementName>
              <level>1</level>
              <query></query>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
            <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
              <splitType>JavaScript</splitType>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.5.2">
          <elements/>
        </filter>
        <transportName>HTTP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.5.2">
          <metaDataId>10</metaDataId>
          <name>Http Get</name>
          <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.5.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <host>http://54.210.72.106:81${Url}</host>
            <useProxyServer>false</useProxyServer>
            <proxyAddress></proxyAddress>
            <proxyPort></proxyPort>
            <method>get</method>
            <headers class="linked-hash-map"/>
            <parameters class="linked-hash-map"/>
            <responseXmlBody>false</responseXmlBody>
            <responseParseMultipart>true</responseParseMultipart>
            <responseIncludeMetadata>false</responseIncludeMetadata>
            <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
            <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
            <multipart>false</multipart>
            <useAuthentication>false</useAuthentication>
            <authenticationType>Basic</authenticationType>
            <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
            <username></username>
            <password></password>
            <content></content>
            <contentType>text/plain</contentType>
            <dataTypeBinary>false</dataTypeBinary>
            <charset>UTF-8</charset>
            <socketTimeout>30000</socketTimeout>
          </properties>
          <transformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.2">
            <elements>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
                <name>Accept message if &quot;$(&apos;Http Method&apos;)&quot; equals &quot;get&quot;</name>
                <sequenceNumber>0</sequenceNumber>
                <field>$(&apos;Http Method&apos;)</field>
                <condition>EQUALS</condition>
                <values>
                  <string>&quot;get&quot;</string>
                </values>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>HTTP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.2">
          <metaDataId>11</metaDataId>
          <name>Http Post</name>
          <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.5.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <host>http://54.210.72.106:81${Url}</host>
            <useProxyServer>false</useProxyServer>
            <proxyAddress></proxyAddress>
            <proxyPort></proxyPort>
            <method>post</method>
            <headers class="linked-hash-map"/>
            <parameters class="linked-hash-map"/>
            <responseXmlBody>false</responseXmlBody>
            <responseParseMultipart>true</responseParseMultipart>
            <responseIncludeMetadata>false</responseIncludeMetadata>
            <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
            <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
            <multipart>false</multipart>
            <useAuthentication>false</useAuthentication>
            <authenticationType>Basic</authenticationType>
            <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
            <username></username>
            <password></password>
            <content>${message.encodedData}</content>
            <contentType>application/json</contentType>
            <dataTypeBinary>false</dataTypeBinary>
            <charset>UTF-8</charset>
            <socketTimeout>30000</socketTimeout>
          </properties>
          <transformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.2">
            <elements>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
                <name>Accept message if &quot;$(&apos;Http Method&apos;)&quot; equals &quot;post&quot;</name>
                <sequenceNumber>0</sequenceNumber>
                <field>$(&apos;Http Method&apos;)</field>
                <condition>EQUALS</condition>
                <values>
                  <string>&quot;post&quot;</string>
                </values>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>HTTP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.2">
          <metaDataId>20</metaDataId>
          <name>Http Delete</name>
          <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.5.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <host>http://54.210.72.106:81${Url}</host>
            <useProxyServer>false</useProxyServer>
            <proxyAddress></proxyAddress>
            <proxyPort></proxyPort>
            <method>delete</method>
            <headers class="linked-hash-map"/>
            <parameters class="linked-hash-map"/>
            <responseXmlBody>false</responseXmlBody>
            <responseParseMultipart>true</responseParseMultipart>
            <responseIncludeMetadata>false</responseIncludeMetadata>
            <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
            <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
            <multipart>false</multipart>
            <useAuthentication>false</useAuthentication>
            <authenticationType>Basic</authenticationType>
            <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
            <username></username>
            <password></password>
            <content></content>
            <contentType>text/plain</contentType>
            <dataTypeBinary>false</dataTypeBinary>
            <charset>UTF-8</charset>
            <socketTimeout>30000</socketTimeout>
          </properties>
          <transformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.2">
            <elements>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
                <name>Accept message if &quot;$(&apos;Http Method&apos;)&quot; equals &quot;delete&quot;</name>
                <sequenceNumber>0</sequenceNumber>
                <field>$(&apos;Http Method&apos;)</field>
                <condition>EQUALS</condition>
                <values>
                  <string>&quot;delete&quot;</string>
                </values>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>HTTP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.2">
          <metaDataId>21</metaDataId>
          <name>Http Put</name>
          <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.5.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <host>http://54.210.72.106:81${Url}</host>
            <useProxyServer>false</useProxyServer>
            <proxyAddress></proxyAddress>
            <proxyPort></proxyPort>
            <method>put</method>
            <headers class="linked-hash-map"/>
            <parameters class="linked-hash-map"/>
            <responseXmlBody>false</responseXmlBody>
            <responseParseMultipart>true</responseParseMultipart>
            <responseIncludeMetadata>false</responseIncludeMetadata>
            <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
            <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
            <multipart>false</multipart>
            <useAuthentication>false</useAuthentication>
            <authenticationType>Basic</authenticationType>
            <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
            <username></username>
            <password></password>
            <content>${message.encodedData}</content>
            <contentType>application/json</contentType>
            <dataTypeBinary>false</dataTypeBinary>
            <charset>UTF-8</charset>
            <socketTimeout>30000</socketTimeout>
          </properties>
          <transformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.2">
            <elements>
              <com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
                <name>Accept message if &quot;$(&apos;Http Method&apos;)&quot; equals &quot;put&quot;</name>
                <sequenceNumber>0</sequenceNumber>
                <field>$(&apos;Http Method&apos;)</field>
                <condition>EQUALS</condition>
                <values>
                  <string>&quot;put&quot;</string>
                </values>
              </com.mirth.connect.plugins.rulebuilder.RuleBuilderRule>
            </elements>
          </filter>
          <transportName>HTTP Sender</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.5.2">
          <metaDataId>18</metaDataId>
          <name>Return Final Result</name>
          <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.5.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.5.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
              <reattachAttachments>true</reattachAttachments>
            </destinationConnectorProperties>
            <script>if ($(&apos;Http Method&apos;).equals(&quot;get&quot;)) {	
	
	return errorCheck($(&apos;d10&apos;)); // return Http Get Method response
		
} else if ($(&apos;Http Method&apos;).equals(&quot;post&quot;)) {
	
	return errorCheck($(&apos;d11&apos;)); // return Http Post Method response
	
} else if ($(&apos;Http Method&apos;).equals(&quot;delete&quot;)) {
	
	return errorCheck($(&apos;d20&apos;)); // return Http Delete Method response
	
} else if ($(&apos;Http Method&apos;).equals(&quot;put&quot;)) {
	
	return errorCheck($(&apos;d21&apos;)); // return Http Put Method response
	
}

function errorCheck($data) 
{
	if ($data.error !== null &amp;&amp; $data.error.slice(34,35) == &apos;&lt;&apos;)
	{
		var error = {};
		return error[&quot;errorHtml&quot;] = $data.error;
	} else {
		return $data;
	}
}
</script>
          </properties>
          <transformer version="3.5.2">
            <elements/>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>RAW</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.5.2">
            <elements>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
                <name>Resource Response</name>
                <sequenceNumber>0</sequenceNumber>
                <script>if (msg[&apos;total&apos;] == 1) 
{
	//resourceType
	tmp[&apos;resourceType&apos;] = msg[&apos;resource&apos;];
	
	//id
	tmp[&apos;id&apos;] =  msg[&apos;data&apos;][&apos;id&apos;];

	//meta
	tmp[&apos;meta&apos;] = {};
	tmp[&apos;meta&apos;][&apos;lastUpdated&apos;] = msg[&apos;data&apos;][&apos;attributes&apos;][&apos;updated_at&apos;];
	
	//text
	tmp[&apos;text&apos;] = {};
	tmp[&apos;text&apos;][&apos;status&apos;] = msg[&apos;status&apos;];
	
	//active
	tmp[&apos;active&apos;] = msg[&apos;data&apos;][&apos;attributes&apos;][&apos;status&apos;];

	switch( msg[&apos;resource&apos;]) 
	{
		case &quot;users&quot;:
			//gender
			tmp[&apos;gender&apos;] = &quot;unknow&quot;;
	
			//name
			tmp[&apos;name&apos;] = {};
			tmp[&apos;name&apos;][&apos;family&apos;] = msg[&apos;data&apos;][&apos;attributes&apos;][&apos;name&apos;].split(&quot; &quot;,2)[1];
			tmp[&apos;name&apos;][&apos;given&apos;] = msg[&apos;data&apos;][&apos;attributes&apos;][&apos;name&apos;].split(&quot; &quot;,1);
			break;

		case &quot;Company&quot;:
			tmp[&apos;name&apos;] = msg[&apos;data&apos;][&apos;attributes&apos;][&apos;name&apos;];
			break;
	}


	
	//managingOrganization
	tmp[&apos;managingOrganization&apos;] = {};
	tmp[&apos;managingOrganization&apos;][&apos;reference&apos;] = $(&apos;Channel Url&apos;).concat($(&apos;Url&apos;));
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
                <name>Bundle Response</name>
                <sequenceNumber>1</sequenceNumber>
                <script>if (msg[&apos;total&apos;] &gt; 1) 
{
	//resourceType
	tmp[&apos;resourceType&apos;] = &apos;Bundle&apos;;
	
	//type
	tmp[&apos;type&apos;] = &apos;collection&apos;;
	
	//total
	tmp[&apos;total&apos;] = msg[&apos;total&apos;];

	//entry
	tmp[&apos;entry&apos;] = [];
	
	for (i = 0; i &lt; msg[&apos;total&apos;]; i++)
	{
		tmp[&apos;entry&apos;][i] = {}
		tmp[&apos;entry&apos;][i][&apos;fullUrl&apos;] = $(&apos;Channel Url&apos;).concat($(&apos;Url&apos;).concat(&apos;/&apos;).concat(msg[&apos;data&apos;][i][&apos;id&apos;]));

		//resource
		tmp[&apos;entry&apos;][i][&apos;resource&apos;] = {};
		tmp[&apos;entry&apos;][i][&apos;resource&apos;][&apos;meta&apos;] = {};
		tmp[&apos;entry&apos;][i][&apos;resource&apos;][&apos;text&apos;] = {};
		tmp[&apos;entry&apos;][i][&apos;resource&apos;][&apos;name&apos;] = [{}];
		
		tmp[&apos;entry&apos;][i][&apos;resource&apos;][&apos;resourceType&apos;] = msg[&apos;resource&apos;];
		tmp[&apos;entry&apos;][i][&apos;resource&apos;][&apos;id&apos;] = msg[&apos;data&apos;][i][&apos;id&apos;];
		tmp[&apos;entry&apos;][i][&apos;resource&apos;][&apos;meta&apos;][&apos;lastUpdated&apos;] = msg[&apos;data&apos;][i][&apos;updated_at&apos;];
		tmp[&apos;entry&apos;][i][&apos;resource&apos;][&apos;text&apos;][&apos;status&apos;] = msg[&apos;data&apos;][i][&apos;status&apos;];
		tmp[&apos;entry&apos;][i][&apos;resource&apos;][&apos;name&apos;][0][&apos;family&apos;] = msg[&apos;data&apos;][i][&apos;last_name&apos;];
		tmp[&apos;entry&apos;][i][&apos;resource&apos;][&apos;name&apos;][0][&apos;given&apos;] = msg[&apos;data&apos;][i][&apos;name&apos;];
	}
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
                <name>Resource Error Response</name>
                <sequenceNumber>2</sequenceNumber>
                <script>if (msg[&apos;status&apos;] == &quot;error&quot;) 
{
	//text
	tmp[&apos;text&apos;] = {};
	tmp[&apos;text&apos;][&apos;status&apos;] = msg[&apos;status&apos;];
	
	//issue
	tmp[&apos;issue&apos;] = {};
	tmp[&apos;issue&apos;][&apos;diagnostics&apos;] = msg[&apos;errors&apos;][&apos;detail&apos;];
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
              <com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
                <name>Server Error Response</name>
                <sequenceNumber>3</sequenceNumber>
                <script>if (msg[&apos;status&apos;] == null)
{
	tmp = msg;
}</script>
              </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
            </elements>
            <inboundTemplate encoding="base64">e30=</inboundTemplate>
            <outboundTemplate encoding="base64">e30=</outboundTemplate>
            <inboundDataType>JSON</inboundDataType>
            <outboundDataType>JSON</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.5.2">
              <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.5.2">
                <splitType>JavaScript</splitType>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.5.2">
            <elements/>
          </filter>
          <transportName>JavaScript Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.5.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.5.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <exportData>
        <metadata>
          <enabled>true</enabled>
        </metadata>
      </exportData>
    </channel>
  </channels>
  <channelTags/>
  <alerts/>
  <codeTemplateLibraries>
    <codeTemplateLibrary version="3.5.2">
      <id>f8595aeb-709f-4e03-90ab-97c02f81982e</id>
      <name>Xml Payloads</name>
      <revision>6</revision>
      <lastModified>
        <time>1525879493149</time>
        <timezone>GMT</timezone>
      </lastModified>
      <description>
</description>
      <includeNewChannels>false</includeNewChannels>
      <enabledChannelIds>
        <string>74fed4cb-0aa0-4289-9cbf-529bf8977107</string>
        <string>44a667ae-1b8a-4d77-9760-335aafb850d0</string>
      </enabledChannelIds>
      <disabledChannelIds>
        <string>bcd252d7-2eac-41f8-9220-4d52ef361d13</string>
        <string>4588f2cb-5cd1-403a-81b2-f721ece6502c</string>
      </disabledChannelIds>
      <codeTemplates>
        <codeTemplate version="3.5.2">
          <id>32d2d5d4-e586-4b2c-a53a-1dc6451945fc</id>
          <name>getXmlPayload</name>
          <revision>6</revision>
          <lastModified>
            <time>1526326279128</time>
            <timezone>GMT</timezone>
          </lastModified>
          <contextSet>
            <delegate>
              <contextType>DESTINATION_DISPATCHER</contextType>
              <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
              <contextType>SOURCE_RECEIVER</contextType>
              <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
              <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
            </delegate>
          </contextSet>
          <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
            <type>FUNCTION</type>
            <code>/**
	Modify the description here. Modify the function name and parameters as needed. One function per
	template is recommended; create a new code template for each new function.

	@param {String} arg1 - arg1 description
	@return {String} return description
*/
function getXmlPayload(payloadID, payloadData)
{
	switch (payloadID)
	{
		case 1: 
			return &quot;&lt;?xml version=&apos;1.0&apos; encoding=&apos;utf-8&apos;?&gt;&quot;
				+ &quot;&lt;soap12:Envelope xmlns:xsi=&apos;http://www.w3.org/2001/XMLSchema-instance&apos; xmlns:xsd=&apos;http://www.w3.org/2001/XMLSchema&apos; xmlns:soap12=&apos;http://www.w3.org/2003/05/soap-envelope&apos;&gt;&quot;
  				+ &quot;&lt;soap12:Body&gt;&quot;
    				+ &quot;&lt;GetCountriesAvailable xmlns=&apos;http://www.holidaywebservice.com/HolidayService_v2/&apos; /&gt;&quot;
  				+ &quot;&lt;/soap12:Body&gt;&quot;
				+ &quot;&lt;/soap12:Envelope&gt;&quot;;
			
			break;
		case 2:
			return &quot;&lt;?xml version=&apos;1.0&apos; encoding=&apos;utf-8&apos;?&gt;&quot;
				+ &quot;&lt;soap12:Envelope xmlns:xsi=&apos;http://www.w3.org/2001/XMLSchema-instance&apos; xmlns:xsd=&apos;http://www.w3.org/2001/XMLSchema&apos; xmlns:soap12=&apos;http://www.w3.org/2003/05/soap-envelope&apos;&gt;&quot;
  				+ &quot;&lt;soap12:Body&gt;&quot;
    				+ &quot;&lt;GetHolidaysAvailable xmlns=&apos;http://www.holidaywebservice.com/HolidayService_v2/&apos;&gt;&quot;
      			+ &quot;&lt;countryCode&gt;&quot; + payloadData[&quot;countryCode&quot;] + &quot;&lt;/countryCode&gt;&quot;
    				+ &quot;&lt;/GetHolidaysAvailable&gt;&quot;
  				+ &quot;&lt;/soap12:Body&gt;&quot;
				+ &quot;&lt;/soap12:Envelope&gt;&quot;;

			break;
		case 3:
			return &quot;&lt;?xml version=&apos;1.0&apos; encoding=&apos;utf-8&apos;?&gt;&quot;
				+ &quot;&lt;soap12:Envelope xmlns:xsi=&apos;http://www.w3.org/2001/XMLSchema-instance&apos; xmlns:xsd=&apos;http://www.w3.org/2001/XMLSchema&apos; xmlns:soap12=&apos;http://www.w3.org/2003/05/soap-envelope&apos;&gt;&quot;
  				+ &quot;&lt;soap12:Body&gt;&quot;
    				+ &quot;&lt;GetHolidayDate xmlns=&apos;http://www.holidaywebservice.com/HolidayService_v2/&apos;&gt;&quot;
      			+ &quot;&lt;countryCode&gt;&quot; + payloadData[&quot;countryCode&quot;] + &quot;&lt;/countryCode&gt;&quot;
      			+ &quot;&lt;holidayCode&gt;&quot; + payloadData[&quot;holidayCode&quot;] + &quot;&lt;/holidayCode&gt;&quot;
      			+ &quot;&lt;year&gt;&quot; + new Date().getFullYear() + &quot;&lt;/year&gt;&quot;
   	 			+ &quot;&lt;/GetHolidayDate&gt;&quot;
  				+ &quot;&lt;/soap12:Body&gt;&quot;
				+ &quot;&lt;/soap12:Envelope&gt;&quot;;
		default:
			return &quot;&quot;;	
	}
}


</code>
          </properties>
        </codeTemplate>
      </codeTemplates>
    </codeTemplateLibrary>
    <codeTemplateLibrary version="3.5.2">
      <id>4c88e558-4c6a-4c8c-9be8-df2d69915ab4</id>
      <name>Xml_Parsers</name>
      <revision>11</revision>
      <lastModified>
        <time>1525879015926</time>
        <timezone>GMT</timezone>
      </lastModified>
      <description></description>
      <includeNewChannels>false</includeNewChannels>
      <enabledChannelIds>
        <string>bcd252d7-2eac-41f8-9220-4d52ef361d13</string>
        <string>4588f2cb-5cd1-403a-81b2-f721ece6502c</string>
      </enabledChannelIds>
      <disabledChannelIds>
        <string>74fed4cb-0aa0-4289-9cbf-529bf8977107</string>
        <string>44a667ae-1b8a-4d77-9760-335aafb850d0</string>
      </disabledChannelIds>
      <codeTemplates/>
    </codeTemplateLibrary>
  </codeTemplateLibraries>
  <serverSettings>
    <clearGlobalMap>true</clearGlobalMap>
    <queueBufferSize>1000</queueBufferSize>
    <defaultMetaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </defaultMetaDataColumns>
    <smtpTimeout>5000</smtpTimeout>
    <smtpSecure>0</smtpSecure>
    <smtpAuth>false</smtpAuth>
  </serverSettings>
  <updateSettings version="3.5.2">
    <statsEnabled>true</statsEnabled>
    <lastStatsTime>1526391127163</lastStatsTime>
  </updateSettings>
  <globalScripts>
    <entry>
      <string>Undeploy</string>
      <string>// This script executes once for each deploy, undeploy, or redeploy task
// if at least one channel was undeployed
// You only have access to the globalMap here to persist data
return;</string>
    </entry>
    <entry>
      <string>Postprocessor</string>
      <string>// This script executes once after a message has been processed
// This script applies across all channels
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
// You have access to &quot;response&quot;, if returned from the channel postprocessor
return;</string>
    </entry>
    <entry>
      <string>Deploy</string>
      <string>// This script executes once for each deploy or redeploy task
// You only have access to the globalMap here to persist data 
globalMap.put(&apos;azx&apos;,&apos;aaaaaaa&apos;);

return;</string>
    </entry>
    <entry>
      <string>Preprocessor</string>
      <string>// Modify the message variable below to pre process data
// This script applies across all channels
return message;</string>
    </entry>
  </globalScripts>
  <pluginProperties>
    <entry>
      <string>Data Pruner</string>
      <properties>
        <property name="archiveEnabled">&lt;boolean&gt;false&lt;/boolean&gt;</property>
        <property name="archiverBlockSize">50</property>
        <property name="archiverOptions">&lt;com.mirth.connect.util.messagewriter.MessageWriterOptions&gt;
  &lt;destinationContent&gt;false&lt;/destinationContent&gt;
  &lt;encrypt&gt;false&lt;/encrypt&gt;
  &lt;includeAttachments&gt;false&lt;/includeAttachments&gt;
  &lt;passwordEnabled&gt;false&lt;/passwordEnabled&gt;
&lt;/com.mirth.connect.util.messagewriter.MessageWriterOptions&gt;</property>
        <property name="enabled">false</property>
        <property name="includeAttachments">&lt;boolean&gt;false&lt;/boolean&gt;</property>
        <property name="maxEventAge"></property>
        <property name="pollingProperties">&lt;com.mirth.connect.donkey.model.channel.PollConnectorProperties version=&quot;3.5.2&quot;&gt;
  &lt;pollingType&gt;INTERVAL&lt;/pollingType&gt;
  &lt;pollOnStart&gt;false&lt;/pollOnStart&gt;
  &lt;pollingFrequency&gt;3600000&lt;/pollingFrequency&gt;
  &lt;pollingHour&gt;0&lt;/pollingHour&gt;
  &lt;pollingMinute&gt;0&lt;/pollingMinute&gt;
  &lt;cronJobs/&gt;
  &lt;pollConnectorPropertiesAdvanced&gt;
    &lt;weekly&gt;true&lt;/weekly&gt;
    &lt;inactiveDays&gt;
      &lt;boolean&gt;false&lt;/boolean&gt;
      &lt;boolean&gt;false&lt;/boolean&gt;
      &lt;boolean&gt;false&lt;/boolean&gt;
      &lt;boolean&gt;false&lt;/boolean&gt;
      &lt;boolean&gt;false&lt;/boolean&gt;
      &lt;boolean&gt;false&lt;/boolean&gt;
      &lt;boolean&gt;false&lt;/boolean&gt;
      &lt;boolean&gt;false&lt;/boolean&gt;
    &lt;/inactiveDays&gt;
    &lt;dayOfMonth&gt;1&lt;/dayOfMonth&gt;
    &lt;allDay&gt;true&lt;/allDay&gt;
    &lt;startingHour&gt;8&lt;/startingHour&gt;
    &lt;startingMinute&gt;0&lt;/startingMinute&gt;
    &lt;endingHour&gt;17&lt;/endingHour&gt;
    &lt;endingMinute&gt;0&lt;/endingMinute&gt;
  &lt;/pollConnectorPropertiesAdvanced&gt;
&lt;/com.mirth.connect.donkey.model.channel.PollConnectorProperties&gt;</property>
        <property name="pruneEvents">false</property>
        <property name="pruningBlockSize">1000</property>
      </properties>
    </entry>
  </pluginProperties>
  <resourceProperties>
    <list>
      <com.mirth.connect.plugins.directoryresource.DirectoryResourceProperties version="3.5.2">
  <pluginPointName>Directory Resource</pluginPointName>
        <type>Directory</type>
        <id>Default Resource</id>
        <name>[Default Resource]</name>
        <description>Loads libraries from the custom-lib folder in the Mirth Connect home directory.</description>
        <includeWithGlobalScripts>true</includeWithGlobalScripts>
        <directory>custom-lib</directory>
        <directoryRecursion>true</directoryRecursion>
      </com.mirth.connect.plugins.directoryresource.DirectoryResourceProperties>
    </list>
  </resourceProperties>
  <channelDependencies/>
</serverConfiguration>